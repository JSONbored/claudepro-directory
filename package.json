{
  "name": "claudepro-directory",
  "private": true,
  "sideEffects": false,
  "version": "1.0.0",
  "description": "A community-driven directory of Claude configurations including agents, MCP servers, rules, commands, and hooks",
  "author": "JSONbored",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/JSONbored/claudepro-directory"
  },
  "keywords": [
    "claude",
    "ai",
    "mcp",
    "agents",
    "configurations",
    "directory"
  ],
  "type": "module",
  "engines": {
    "node": ">=22.0.0",
    "npm": ">=10.0.0"
  },
  "scripts": {
    "dev": "npm run build:content && next dev --turbopack",
    "build": "npm run generate:events && npm run build:content && npm run generate:openapi && npm run build:api-docs && next build --turbopack",
    "build:analyze": "TURBOPACK_STATS=1 npm run build",
    "build:content": "tsx scripts/build-content.ts",
    "build:api-docs": "tsx scripts/generate-fumadocs-api.ts",
    "generate:static-apis": "tsx scripts/generate-static-apis.ts",
    "generate:openapi": "tsx scripts/generate-openapi.ts",
    "generate:og-images": "tsx scripts/generate-og-images.ts",
    "generate:og-images:force": "tsx scripts/generate-og-images.ts --force",
    "generate:types": "vercel env pull .env.local --yes && supabase gen types typescript --db-url \"$POSTGRES_URL_NON_POOLING\" --schema public > src/types/database.types.ts && rm .env.local",
    "indexnow:submit": "tsx scripts/submit-indexnow.ts",
    "start": "next start",
    "type-check": "tsc --noEmit",
    "lint": "ultracite check",
    "format": "ultracite fix",
    "email:dev": "email dev --dir src/emails --port 3001",
    "validate:content": "tsx scripts/validate-content.ts",
    "validate:seo": "tsx scripts/validate-seo.ts",
    "validate:seo:fix": "tsx scripts/validate-seo.ts --fix",
    "optimize:titles": "tsx scripts/optimize-titles.ts",
    "optimize:titles:dry": "tsx scripts/optimize-titles.ts --dry-run",
    "validate:titles": "tsx scripts/verify-titles.ts",
    "validate:titles:quick": "tsx scripts/verify-titles.ts --quick",
    "validate:llmstxt": "tsx scripts/validate-llmstxt.ts",
    "prepare": "command -v lefthook >/dev/null 2>&1 && LEFTHOOK_CONFIG=config/tools/lefthook.yml lefthook install && rm -f lefthook.yml || echo 'Skipping lefthook install (not available)'",
    "analyze:architecture": "npx skott --displayMode=webapp",
    "analyze:unused": "npx knip -c config/tools/knip.json",
    "analyze:circular": "npx madge --circular --extensions ts,tsx src/",
    "analyze:circular-graph": "npx madge --circular --extensions ts,tsx --image circular-deps.svg src/",
    "analyze:all": "npm run analyze:unused && npm run analyze:circular",
    "a11y:audit": "lhci autorun --config=config/tools/lighthouserc.cjs",
    "a11y:ci": "lhci autorun --config=config/tools/lighthouserc.cjs --assert",
    "test": "vitest",
    "test:unit": "vitest run",
    "test:watch": "vitest",
    "test:ui": "vitest --ui",
    "test:coverage": "vitest run --coverage",
    "test:e2e": "playwright test --config=config/tools/playwright.config.ts",
    "test:e2e:ui": "playwright test --config=config/tools/playwright.config.ts --ui",
    "test:e2e:debug": "playwright test --config=config/tools/playwright.config.ts --debug",
    "test:e2e:headed": "playwright test --config=config/tools/playwright.config.ts --headed",
    "test:e2e:chromium": "playwright test --config=config/tools/playwright.config.ts --project=chromium",
    "test:e2e:mobile": "playwright test --config=config/tools/playwright.config.ts --project=mobile-chrome",
    "test:e2e:a11y": "playwright test --config=config/tools/playwright.config.ts --project=accessibility",
    "test:e2e:seo": "playwright test --config=config/tools/playwright.config.ts tests/e2e/seo/comprehensive-sitemap-coverage.spec.ts --project=chromium --reporter=./config/tools/progress-reporter.ts --reporter=html 2>/dev/null",
    "test:e2e:metadata": "playwright test --config=config/tools/playwright.config.ts tests/e2e/seo/sitemap-metadata-validation.spec.ts --project=chromium --reporter=list",
    "test:e2e:clean": "rm -rf playwright-report test-results",
    "test:e2e:report": "playwright show-report playwright-report",
    "test:e2e:codegen": "playwright codegen http://localhost:3000",
    "test:all": "npm run test:unit && npm run test:e2e",
    "tech-debt:baseline": "config/tools/tech-debt/tracker.sh baseline",
    "tech-debt:check": "config/tools/tech-debt/tracker.sh check",
    "tech-debt:report": "config/tools/tech-debt/tracker.sh report",
    "generate:events": "tsx scripts/generate-events.ts"
  },
  "dependencies": {
    "@arcjet/next": "^1.0.0-beta.13",
    "@asteasolutions/zod-to-openapi": "^8.1.0",
    "@nosecone/next": "^1.0.0-beta.13",
    "@octokit/rest": "^22.0.0",
    "@radix-ui/react-avatar": "^1.1.10",
    "@radix-ui/react-checkbox": "^1.3.3",
    "@radix-ui/react-collapsible": "^1.1.12",
    "@radix-ui/react-dialog": "^1.1.15",
    "@radix-ui/react-dropdown-menu": "^2.1.16",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-scroll-area": "^1.2.10",
    "@radix-ui/react-select": "^2.2.6",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slider": "^1.3.6",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-switch": "^1.2.6",
    "@radix-ui/react-tabs": "^1.1.13",
    "@radix-ui/react-tooltip": "^1.2.8",
    "@radix-ui/react-use-controllable-state": "^1.2.2",
    "@react-email/components": "^0.5.6",
    "@react-email/render": "^1.3.2",
    "@supabase/ssr": "^0.7.0",
    "@supabase/supabase-js": "^2.75.0",
    "@tailwindcss/postcss": "^4.1.14",
    "@types/he": "^1.2.3",
    "@types/node": "^24.7.2",
    "@types/react": "^19.2.2",
    "@types/react-dom": "^19.2.2",
    "@upstash/redis": "^1.35.6",
    "@vercel/analytics": "^1.5.0",
    "@vercel/speed-insights": "^1.2.0",
    "babel-plugin-react-compiler": "^1.0.0",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cmdk": "^1.1.1",
    "devalue": "^5.4.1",
    "framer-motion": "^12.23.24",
    "fumadocs-openapi": "^9.5.1",
    "fumadocs-ui": "^15.8.5",
    "fuzzysort": "^3.1.0",
    "he": "^1.2.0",
    "isomorphic-dompurify": "^2.28.0",
    "lucide-react": "^0.545.0",
    "marked": "^16.4.0",
    "next": "15.5.5",
    "next-mdx-remote": "^5.0.0",
    "next-safe-action": "^8.0.11",
    "next-themes": "^0.4.6",
    "react": "^19.2.0",
    "react-dom": "^19.2.0",
    "react-error-boundary": "^6.0.0",
    "recharts": "^3.2.1",
    "rehype-pretty-code": "^0.14.1",
    "rehype-slug": "^6.0.0",
    "remark-gfm": "^4.0.1",
    "resend": "^6.1.3",
    "sharp": "^0.34.4",
    "shiki": "^3.13.0",
    "sonner": "^2.0.7",
    "svix": "^1.77.0",
    "tailwind-merge": "^3.3.1",
    "tailwindcss": "^4.1.14",
    "tsx": "^4.20.6",
    "typescript": "5.9.3",
    "zod": "^4.1.12"
  },
  "devDependencies": {
    "@axe-core/playwright": "^4.10.2",
    "@biomejs/biome": "2.2.6",
    "@faker-js/faker": "^10.1.0",
    "@lhci/cli": "^0.15.1",
    "@next/bundle-analyzer": "^15.5.5",
    "@playwright/test": "^1.56.0",
    "@testing-library/jest-dom": "^6.9.1",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@vitejs/plugin-react": "^5.0.4",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "fast-xml-parser": "^5.3.0",
    "fishery": "^2.3.1",
    "happy-dom": "^20.0.2",
    "jest-axe": "^10.0.0",
    "knip": "^5.65.0",
    "lefthook": "^1.13.6",
    "msw": "^2.11.5",
    "ultracite": "^5.6.4",
    "vite-tsconfig-paths": "^5.1.4",
    "vitest": "^3.2.4"
  },
  "overrides": {
    "tmp": "^0.2.3"
  }
}
