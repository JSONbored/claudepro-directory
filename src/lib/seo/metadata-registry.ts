/**
 * Metadata Types & Utilities
 *
 * **PATTERN-BASED ARCHITECTURE (October 2025):**
 * All metadata is now generated by the pattern system (metadata-templates.ts).
 * This file provides shared types and AI optimization utilities.
 *
 * Metadata Resolution (100% Pattern Coverage):
 * 1. **Pattern System** (Primary) - All routes use pattern-based templates
 * 2. **Smart Defaults** (Fallback) - Generic metadata for unknown routes only
 *
 * October 2025 SEO Optimization:
 * - AI citation optimization (ChatGPT, Perplexity, Claude search)
 * - Schema.org 29.3 compliance (817 types available)
 * - Server-side JSON-LD only (AI bots skip client-side JavaScript)
 * - Recency signals (dateModified within 30 days = 3.2x more citations)
 * - Year inclusion in descriptions (ChatGPT queries for current year)
 *
 * @module lib/seo/metadata-registry
 */

import { z } from 'zod';
import { APP_CONFIG } from '@/src/lib/constants';

/**
 * Metadata Source Type
 * Indicates where metadata originated from
 */
export type RouteMetadataSource = 'registry' | 'schema' | 'smart-default';

/**
 * Context type for metadata generation
 * Defined here to avoid circular imports
 *
 * Production Standards:
 * - Compatible with exactOptionalPropertyTypes: true
 * - All optional properties explicitly allow undefined
 * - Index signatures for flexibility with content loaders
 */
export interface MetadataContext {
  /** Route path (e.g., '/', '/agents', '/agents/code-reviewer') */
  route?: string | undefined;

  /** Dynamic route parameters from Next.js (e.g., { category: 'agents', slug: 'code-reviewer' }) */
  params?: Record<string, string | string[]> | undefined;

  /** Content item data (from schema adapter or page data) */
  item?:
    | {
        title?: string | undefined;
        name?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
        author?: string | undefined;
        dateAdded?: string | undefined;
        lastModified?: string | undefined;
        [key: string]: unknown;
      }
    | undefined;

  /** Category configuration from UNIFIED_CATEGORY_REGISTRY */
  categoryConfig?:
    | {
        title?: string | undefined;
        pluralTitle?: string | undefined;
        metaDescription?: string | undefined;
        keywords?: string | undefined; // Comma-separated string from category-config.ts
        [key: string]: unknown;
      }
    | undefined;

  /** Category slug (e.g., 'agents', 'mcp', 'commands') */
  category?: string | undefined;

  /** Content slug (e.g., 'code-reviewer', 'filesystem-server') */
  slug?: string | undefined;

  /** User profile data (for USER_PROFILE pattern) */
  profile?: unknown | undefined;

  /** Search/filter parameters */
  filters?: Record<string, unknown> | undefined;

  /** Index signature for additional dynamic properties */
  [key: string]: unknown;
}

/**
 * AI Optimization Configuration Schema
 * Flags for October 2025 AI search engine optimization
 *
 * Research-backed optimizations:
 * - Content updated within 30 days = 3.2x more AI citations
 * - Including "2025" in descriptions increases ChatGPT citation likelihood
 * - Wikipedia-style content gets 7.8% citation rate (highest of all sources)
 * - Article schema preferred over WebPage for content pages
 */

/**
 * Title Configuration
 * Titles are generated by pattern system templates (metadata-templates.ts)
 *
 * Production Standards:
 * - 53-60 chars total (2025 SEO optimization for keyword density)
 * - Hyphen separator (2025 best practice)
 * - Support for static strings or dynamic functions
 * - **PERFORMANCE**: Synchronous only - no Promise overhead
 * - Next.js 15 can optimize synchronous metadata at build time
 */
export type TitleConfig = string | ((context?: MetadataContext) => string);

/**
 * Structured Data Configuration Schema
 * Controls JSON-LD schema generation for SEO
 *
 * Production Standards:
 * - Server-side only (AI bots skip client-side JavaScript)
 * - Schema.org 29.3 compliance (September 2025 version)
 * - Article schema preferred for content pages (better AI citations)
 * - All schemas include required properties for validation
 *
 * @see {@link https://schema.org/docs/schemas.html} - Schema.org documentation
 */
export const structuredDataConfigSchema = z
  .object({
    /** Primary schema type (Article recommended for AI citations) */
    type: z
      .enum([
        'WebPage',
        'Article',
        'FAQPage',
        'HowTo',
        'SoftwareApplication',
        'JobPosting',
        'CollectionPage',
        'Blog',
        'TechArticle',
        'ProfilePage',
      ])
      .describe('Schema.org type for structured data generation'),

    /** Generate breadcrumb navigation schema */
    breadcrumbs: z.boolean().default(true).describe('Include BreadcrumbList schema for navigation'),

    /** Include dateModified for recency signals */
    dateModified: z
      .boolean()
      .default(false)
      .describe('Add dateModified property for fresh content signals (3.2x more AI citations)'),

    /** Include author information */
    author: z.boolean().default(false).describe('Include author/publisher information in schema'),
  })
  .describe('Configuration for JSON-LD structured data generation');

export type StructuredDataConfig = z.infer<typeof structuredDataConfigSchema>;

/**
 * Route Metadata Configuration
 * Defines metadata for a specific route or route pattern
 *
 * Production Standards:
 * - Type-safe function signatures with explicit MetadataContext
 * - Support for both static values and dynamic resolution
 * - AI optimization flags for October 2025 SEO
 * - Full TSDoc documentation for all properties
 *
 * @interface RouteMetadata
 */
export interface RouteMetadata {
  /**
   * Page title configuration
   * Can be static string or function for dynamic resolution
   * Generated by pattern system templates (metadata-templates.ts)
   *
   * @example
   * ```typescript
   * // Static
   * title: 'Community - Claude Pro Directory'
   *
   * // Dynamic
   * title: (context) => `${context?.item?.title} - ${APP_CONFIG.name}`
   * ```
   */
  title: TitleConfig;

  /**
   * Meta description (120-160 chars for AI optimization)
   * AI-optimized length based on October 2025 research
   * Can be static string or function for dynamic resolution
   *
   * **PERFORMANCE**: Synchronous only - no Promise overhead
   */
  description: string | ((context?: MetadataContext) => string);

  /**
   * Keywords array (max 10 for SEO best practice)
   * Optional - only used for specific content types
   * Can be static array or function for dynamic resolution
   *
   * **PERFORMANCE**: Synchronous only - no Promise overhead
   */
  keywords?: string[] | ((context?: MetadataContext) => string[]);

  /**
   * OpenGraph configuration (REQUIRED for all routes)
   * Used for social media sharing previews
   * Title and description default to page title/description if not specified
   */
  openGraph: {
    title?: string | undefined;
    description?: string | undefined;
    type: 'website' | 'article';
  };

  /**
   * Twitter Card configuration (REQUIRED for all routes)
   * Used for Twitter/X sharing previews
   * Title and description default to page title/description if not specified
   */
  twitter: {
    title?: string | undefined;
    description?: string | undefined;
    card: 'summary' | 'summary_large_image';
  };

  /**
   * Structured data configuration
   * Controls JSON-LD schema generation for SEO
   */
  structuredData: StructuredDataConfig;

  /**
   * Robots meta directives (optional)
   * Controls search engine crawler behavior
   * Defaults to index: true, follow: true if not specified
   */
  robots?: {
    index: boolean;
    follow: boolean;
  };
}

/**
 * Global Metadata Defaults
 * Applied to all routes unless overridden
 */
export const METADATA_DEFAULTS = {
  siteName: APP_CONFIG.name,
  separator: ' - ',
  includeYear: true,
  serverSideOnly: true, // No client-side JSON-LD (AI bots skip JavaScript)
  schemaVersion: '29.3', // Schema.org version (Sept 4, 2025)
} as const;

// ============================================
// AI SEARCH OPTIMIZATION UTILITIES
// ============================================
// Consolidated from ai-optimization.ts for tree-shaking
// October 2025 AI citation optimization for ChatGPT, Perplexity, Claude

/**
 * Get current year for AI search optimization
 * ChatGPT often includes the current year when issuing Bing queries
 */
export function getCurrentYear(): string {
  return new Date().getFullYear().toString();
}

/**
 * Get current month and year (e.g., "October 2025")
 * Useful for seasonal/time-sensitive content
 */
export function getCurrentMonthYear(): string {
  const date = new Date();
  const month = date.toLocaleString('en-US', { month: 'long' });
  const year = date.getFullYear();
  return `${month} ${year}`;
}
