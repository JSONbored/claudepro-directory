[
  {
    "type": "hook",
    "id": "pre-tool-validation",
    "name": "Pre-Tool Validation Hook",
    "description": "Validates tool inputs before execution to prevent common errors",
    "category": "Development",
    "tags": "validation, pre-tool-use, error-prevention",
    "hookScript": "#!/usr/bin/env bash\n# Pre-Tool Validation Hook\n# Validates tool inputs before execution\n\nread -r input\n\n# Parse JSON input\ntool_name=$(echo \"$input\" | jq -r '.tool_name // \"unknown\"')\nparameters=$(echo \"$input\" | jq -r '.parameters // {}')\n\n# Example validations\ncase \"$tool_name\" in\n  \"Write\"|\"Edit\")\n    file_path=$(echo \"$parameters\" | jq -r '.file_path // \"\"')\n    if [[ -z \"$file_path\" ]]; then\n      echo \"Error: file_path is required for $tool_name\"\n      exit 1\n    fi\n    ;;\n  \"Bash\")\n    command=$(echo \"$parameters\" | jq -r '.command // \"\"')\n    if [[ \"$command\" =~ rm.*-rf.*/ ]]; then\n      echo \"Warning: Destructive command detected - please confirm\"\n      exit 1\n    fi\n    ;;\nesac\n\necho \"Validation passed for $tool_name\"\nexit 0",
    "hookType": "pre-tool-use",
    "triggeredBy": "Write, Edit, Bash"
  },
  {
    "type": "hook",
    "id": "auto-commit-tracker",
    "name": "Auto Commit Tracker",
    "description": "Automatically tracks file changes and suggests commits after significant edits",
    "category": "Git",
    "tags": "git, automation, post-tool-use",
    "hookScript": "#!/usr/bin/env bash\n# Auto Commit Tracker\n# Suggests commits after file modifications\n\nread -r input\n\n# Parse tool output\ntool_name=$(echo \"$input\" | jq -r '.tool_name // \"unknown\"')\nfile_path=$(echo \"$input\" | jq -r '.parameters.file_path // \"\"')\n\n# Only track Write/Edit operations\nif [[ \"$tool_name\" != \"Write\" ]] && [[ \"$tool_name\" != \"Edit\" ]]; then\n  exit 0\nfi\n\n# Check if file is tracked by git\nif [[ -n \"$file_path\" ]] && git ls-files --error-unmatch \"$file_path\" &>/dev/null; then\n  # Check if file has uncommitted changes\n  if git diff --quiet \"$file_path\"; then\n    exit 0\n  fi\n  \n  echo \"\"\n  echo \"📝 Modified: $file_path\"\n  echo \"💡 Consider committing your changes with: git add $file_path && git commit\"\nfi\n\nexit 0",
    "hookType": "post-tool-use",
    "triggeredBy": "Write, Edit"
  }
]
