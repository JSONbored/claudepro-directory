{
  "slug": "pdf",
  "title": "PDF Skill",
  "seoTitle": "PDF Skill - Document Processing",
  "description": "Comprehensive PDF manipulation: extract, merge, split, forms, OCR, and metadata.",
  "category": "skills",
  "author": "Anthropic / Community",
  "dateAdded": "2025-10-01",
  "tags": ["pdf", "python", "ocr", "documents"],
  "content": "# PDF Processing Guide\n\nOverview, capabilities, and best practices...\n\n## Key Operations\n- Extract text/tables\n- Merge/split\n- Fill forms\n- Rotate\n- Watermark\n",
  "requirements": [
    "Python 3.11+",
    "pypdf",
    "pdfplumber",
    "qpdf",
    "poppler-utils",
    "pytesseract",
    "pdf2image"
  ],
  "features": [
    "Extract text/tables",
    "Merge/split",
    "Fill forms",
    "Rotate",
    "Watermark"
  ],
  "useCases": [
    "Automated form filling",
    "Batch text extraction",
    "Document assembly"
  ],
  "examples": [
    {
      "title": "Merge PDFs",
      "language": "python",
      "code": "from pypdf import PdfWriter, PdfReader\nwriter = PdfWriter()\nfor path in ['a.pdf','b.pdf']:\n    writer.append(PdfReader(path))\nwith open('merged.pdf','wb') as f:\n    writer.write(f)"
    }
  ],
  "installation": {
    "claudeDesktop": { "steps": ["Install poppler-utils", "Install qpdf"] },
    "claudeCode": { "steps": ["pip install pypdf pdfplumber"] }
  },
  "troubleshooting": [
    { "issue": "Encrypted PDF", "solution": "Use qpdf --decrypt before processing" }
  ],
  "documentationUrl": "https://pypi.org/project/pypdf/",
  "source": "official"
}
