{
  "slug": "service-mcp-server",
  "description": "Brief description of what this MCP server provides and its capabilities",
  "category": "mcp",
  "author": "Your Name or GitHub Username",
  "dateAdded": "YYYY-MM-DD",
  "tags": [
    "server-type",
    "data-source",
    "technology-stack",
    "use-case-category"
  ],
  "content": "Detailed description of the MCP server's functionality, what it connects to, and how it enhances Claude's capabilities. Explain the value proposition and key benefits.",
  "configuration": {
    "claudeDesktop": {
      "mcpServers": {
        "your-server-name": {
          "command": "npx",
          "args": ["-y", "@your-org/your-mcp-server"],
          "env": {
            "API_KEY": "your_api_key_here",
            "EXAMPLE_CONFIG": "configuration_value"
          }
        }
      }
    },
    "claudeCode": {
      "mcpServers": {
        "your-server-name": {
          "command": "npx",
          "args": ["-y", "@your-org/your-mcp-server"],
          "env": {
            "API_KEY": "${API_KEY}",
            "EXAMPLE_CONFIG": "${EXAMPLE_CONFIG:-default}"
          }
        }
      }
    },
    "http": {
      "type": "http",
      "url": "https://api.example.com/mcp",
      "headers": {
        "Authorization": "Bearer ${API_TOKEN}",
        "X-API-Key": "${API_KEY}"
      }
    },
    "sse": {
      "type": "sse",
      "url": "https://api.example.com/mcp/sse",
      "headers": {
        "Authorization": "Bearer ${API_TOKEN}"
      }
    }
  },
  "package": "@your-org/your-mcp-server",
  "source": "community",
  "features": [
    "Key capability or data source 1",
    "Advanced functionality or integration 2",
    "Specialized tool or resource access 3",
    "Security or performance feature 4"
  ],
  "useCases": [
    "Common workflow or task this server enables",
    "Specific problem this server solves",
    "Type of project that benefits most from this server"
  ],
  "installation": {
    "claudeDesktop": {
      "steps": [
        "Obtain API key or credentials from [SERVICE_NAME]",
        "Open your Claude Desktop configuration file",
        "Add the MCP server configuration with your credentials",
        "Restart Claude Desktop",
        "Verify connection by asking Claude to [TEST_ACTION]"
      ],
      "configPath": {
        "macOS": "~/Library/Application Support/Claude/claude_desktop_config.json",
        "windows": "%APPDATA%\\Claude\\claude_desktop_config.json",
        "linux": "~/.config/claude/claude_desktop_config.json"
      }
    },
    "claudeCode": {
      "steps": [
        "Create .mcp.json file in your project root",
        "Add the MCP server configuration",
        "Set environment variables for credentials",
        "Test connection with Claude Code"
      ],
      "configFormat": "JSON configuration in .mcp.json",
      "configPath": {
        "project": ".mcp.json",
        "user": "~/.claude/.mcp.json"
      }
    },
    "requirements": [
      "Node.js 18+ for npm-based servers",
      "Valid API credentials for [SERVICE_NAME]",
      "Network access to [SERVICE_ENDPOINTS]"
    ]
  },
  "security": [
    "Use environment variables for sensitive credentials",
    "Implement least-privilege access when configuring API keys",
    "Regularly rotate API keys and tokens",
    "Monitor API usage and set up alerts for unusual activity",
    "Use read-only credentials when write access isn't needed"
  ],
  "troubleshooting": [
    {
      "issue": "Connection timeout or server not responding",
      "solution": "Check network connectivity and verify server URL endpoints. Ensure firewall allows outbound connections."
    },
    {
      "issue": "Authentication errors or invalid credentials",
      "solution": "Verify API key format and permissions. Check if credentials need to be refreshed or renewed."
    },
    {
      "issue": "MCP server crashes or fails to start",
      "solution": "Check Node.js version compatibility. Review server logs for specific error messages."
    }
  ],
  "examples": [
    {
      "title": "Basic Query Example",
      "code": "Ask Claude: 'Can you list all [RESOURCE_TYPE] from [SERVICE_NAME]?'",
      "language": "plaintext",
      "description": "Simple query to retrieve resources from the MCP server"
    },
    {
      "title": "Configuration Example",
      "code": "{\n  \"mcpServers\": {\n    \"your-server\": {\n      \"command\": \"npx\",\n      \"args\": [\"-y\", \"@your-org/server\"],\n      \"env\": {\n        \"API_KEY\": \"${API_KEY}\"\n      }\n    }\n  }\n}",
      "language": "json",
      "description": "Complete MCP server configuration for Claude Code"
    },
    {
      "title": "Advanced Workflow",
      "code": "// Example: Automated data sync workflow\n1. Ask Claude to fetch data from [SERVICE]\n2. Process and transform the data\n3. Store results using another MCP tool",
      "language": "markdown",
      "description": "Multi-step workflow combining multiple MCP capabilities"
    }
  ],
  "requiresAuth": true,
  "authType": "api_key | oauth | connection_string | basic_auth",
  "permissions": ["read", "write", "admin", "schema"],
  "configLocation": "claude_desktop_config.json | .mcp.json",
  "documentationUrl": "https://docs.your-service.com/mcp-integration",
  "mcpVersion": "1.0.0",
  "serverType": "stdio | http | sse",
  "dataTypes": [
    "Type of data the server provides (e.g., files, database records, API responses)",
    "Format of data (e.g., JSON, CSV, binary)",
    "Schema or structure information"
  ],
  "toolsProvided": [
    "List of tools/functions the MCP server makes available",
    "Capabilities exposed through the Model Context Protocol",
    "Actions Claude can perform through this server"
  ],
  "resourcesProvided": [
    "Types of resources accessible through this server",
    "Data sources or content types available",
    "Information Claude can retrieve or access"
  ],
  "transport": {
    "stdio": {
      "command": "npx",
      "args": ["-y", "@your-org/your-mcp-server"],
      "env": {
        "CONFIG_VAR": "value"
      }
    },
    "http": {
      "url": "https://api.example.com/mcp",
      "headers": {
        "Authorization": "Bearer token"
      }
    },
    "sse": {
      "url": "https://api.example.com/mcp/sse",
      "headers": {
        "Authorization": "Bearer token"
      }
    }
  },
  "capabilities": {
    "resources": true,
    "tools": true,
    "prompts": false,
    "logging": true
  },
  "serverInfo": {
    "name": "your-mcp-server",
    "version": "1.0.0",
    "protocol_version": "2024-11-05"
  }
}
