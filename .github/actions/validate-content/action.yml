name: 'Validate Content Files'
description: 'Unified content validation for schema, SEO, and metadata quality checks'

inputs:
  validation-type:
    description: 'Validation type: content | seo | titles | metadata | llmstxt | all'
    required: true
  files:
    description: 'Specific files to validate (space-separated paths). Leave empty to validate all.'
    required: false
    default: ''
  output-file:
    description: 'Path to write validation report output'
    required: false
    default: ''
  continue-on-error:
    description: 'Whether to continue on validation errors'
    required: false
    default: 'false'

outputs:
  validation-failed:
    description: 'Whether validation failed (true/false)'
    value: ${{ steps.validate.outputs.failed }}
  validation-report:
    description: 'Path to validation report file'
    value: ${{ steps.validate.outputs.report-path }}

runs:
  using: 'composite'
  steps:
    - name: Run validation
      id: validate
      shell: bash
      run: |
        set +e  # Don't exit on error immediately
        VALIDATION_TYPE="${{ inputs.validation-type }}"
        FILES="${{ inputs.files }}"
        OUTPUT_FILE="${{ inputs.output-file }}"
        CONTINUE_ON_ERROR="${{ inputs.continue-on-error }}"
        FAILED="false"

        echo "=== Running $VALIDATION_TYPE validation with unified system ==="

        # Build validation command
        if [ "$VALIDATION_TYPE" = "all" ]; then
          VALIDATION_CMD="npm run validate"
        else
          VALIDATION_CMD="npm run validate -- --type=$VALIDATION_TYPE"
        fi

        # Add CI flag for GitHub Actions compatible output
        VALIDATION_CMD="$VALIDATION_CMD --ci"

        # Run validation
        if [ -n "$OUTPUT_FILE" ]; then
          # Capture output to file
          if ! $VALIDATION_CMD > "$OUTPUT_FILE" 2>&1; then
            FAILED="true"
          fi
          cat "$OUTPUT_FILE"
        else
          # Direct output
          if ! $VALIDATION_CMD; then
            FAILED="true"
          fi
        fi

        # Set outputs
        echo "failed=$FAILED" >> $GITHUB_OUTPUT
        if [ -n "$OUTPUT_FILE" ]; then
          echo "report-path=$OUTPUT_FILE" >> $GITHUB_OUTPUT
        fi

        # Handle error continuation
        if [ "$FAILED" = "true" ] && [ "$CONTINUE_ON_ERROR" = "false" ]; then
          echo "❌ Validation failed and continue-on-error is false"
          exit 1
        elif [ "$FAILED" = "true" ]; then
          echo "⚠️  Validation failed but continuing (continue-on-error=true)"
          exit 0
        else
          echo "✅ Validation passed"
          exit 0
        fi
