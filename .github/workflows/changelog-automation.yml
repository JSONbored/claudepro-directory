name: Changelog Automation

on:
  push:
    branches: [main]
    paths-ignore:
      - 'CHANGELOG.md'
      - '.github/workflows/changelog-automation.yml'
      - 'config/changelog/**'
  workflow_dispatch:
    inputs:
      force:
        description: 'Force changelog generation even if already updated'
        required: false
        type: boolean
        default: false

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  generate-changelog:
    name: Generate Changelog Entry
    runs-on: ubuntu-latest
    timeout-minutes: 10

    # Skip if commit message contains [skip changelog] or authored by bot
    if: |
      !contains(github.event.head_commit.message, '[skip changelog]') &&
      github.actor != 'dependabot[bot]' &&
      github.actor != 'github-actions[bot]'

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Full history for git-cliff

      - name: Setup Node.js with dependencies
        uses: ./.github/actions/setup-node-deps
        with:
          skip-build-content: 'true'

      - name: Install git-cliff
        run: |
          # Install git-cliff via binary download (faster than action)
          curl -sSL https://github.com/orhun/git-cliff/releases/download/v2.6.1/git-cliff-2.6.1-x86_64-unknown-linux-gnu.tar.gz | tar xz -C /usr/local/bin

      - name: Check if changelog needs update
        id: check
        run: |
          # Check if CHANGELOG.md was modified in this push
          if git diff --name-only HEAD~1 HEAD | grep -q "CHANGELOG.md"; then
            echo "needs_update=false" >> $GITHUB_OUTPUT
            echo "‚ÑπÔ∏è  CHANGELOG.md already updated in this push"
          else
            echo "needs_update=true" >> $GITHUB_OUTPUT
            echo "‚úÖ CHANGELOG.md needs update"
          fi

          # Check for conventional commits
          COMMITS=$(git log HEAD~1..HEAD --pretty=format:"%s")
          if echo "$COMMITS" | grep -qE "^(feat|fix|perf|refactor|style|revert):"; then
            echo "has_conventional_commits=true" >> $GITHUB_OUTPUT
            echo "‚úÖ Found conventional commits"
          else
            echo "has_conventional_commits=false" >> $GITHUB_OUTPUT
            echo "‚ÑπÔ∏è  No conventional commits found (skipping)"
          fi

      - name: Generate changelog entry
        id: generate
        if: |
          (steps.check.outputs.needs_update == 'true' && steps.check.outputs.has_conventional_commits == 'true') ||
          github.event.inputs.force == 'true'
        run: |
          # Generate entry from unreleased commits
          git-cliff \
            --config config/changelog/cliff.toml \
            --unreleased \
            --strip all \
            --output /tmp/changelog-entry.md

          if [ -s /tmp/changelog-entry.md ]; then
            echo "generated=true" >> $GITHUB_OUTPUT
            echo "üìù Generated changelog entry:"
            cat /tmp/changelog-entry.md
          else
            echo "generated=false" >> $GITHUB_OUTPUT
            echo "‚ÑπÔ∏è  No changelog content generated"
          fi

      - name: Prepend to CHANGELOG.md
        id: update
        if: steps.generate.outputs.generated == 'true'
        run: |
          # Prepend new entry (git-cliff handles the logic)
          git-cliff \
            --config config/changelog/cliff.toml \
            --unreleased \
            --prepend CHANGELOG.md

          # Verify update
          if git diff --quiet CHANGELOG.md; then
            echo "updated=false" >> $GITHUB_OUTPUT
            echo "‚ÑπÔ∏è  No changes to CHANGELOG.md"
          else
            echo "updated=true" >> $GITHUB_OUTPUT
            echo "‚úÖ Updated CHANGELOG.md"
          fi

      - name: Create Pull Request
        id: pr
        if: steps.update.outputs.updated == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore(changelog): auto-generate entry from recent commits [skip changelog]"
          branch: changelog/auto-${{ github.run_number }}
          delete-branch: true
          title: "üìù Automated Changelog Update"
          body: |
            ## Automated Changelog Entry

            This PR was automatically generated from recent commits merged to `main`.

            ### Review Checklist
            - [ ] TL;DR accurately summarizes changes
            - [ ] Technical Details section is complete
            - [ ] Deployment notes are accurate
            - [ ] All user-facing changes are included
            - [ ] No internal/backend-only changes leaked

            ### What to Review
            1. **Accuracy**: Does the generated content match what was actually changed?
            2. **Completeness**: Are all user-facing features/fixes included?
            3. **Quality**: Is the TL;DR clear and concise?

            ### Next Steps
            1. Review the generated entry in CHANGELOG.md
            2. Enhance TL;DR and Technical Details sections as needed
            3. Merge to publish at [/changelog](${{ github.server_url }}/${{ github.repository }}/blob/main/CHANGELOG.md)

            ---
            _Generated by changelog automation workflow_
            _See: `.github/workflows/changelog-automation.yml`_
          labels: |
            documentation
            automated
            changelog
          assignees: ${{ github.repository_owner }}

      - name: Add workflow summary
        if: always()
        run: |
          echo "## Changelog Automation Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ steps.check.outputs.needs_update }}" = "false" ]; then
            echo "‚ÑπÔ∏è  **Status**: Skipped (CHANGELOG.md already updated)" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ steps.check.outputs.has_conventional_commits }}" = "false" ]; then
            echo "‚ÑπÔ∏è  **Status**: Skipped (no conventional commits found)" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ steps.update.outputs.updated }}" = "true" ]; then
            echo "‚úÖ **Status**: PR created (#${{ steps.pr.outputs.pull-request-number }})" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**PR URL**: ${{ steps.pr.outputs.pull-request-url }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ö†Ô∏è  **Status**: Generated but no changes detected" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Comment on failure
        if: failure()
        uses: actions/github-script@v8
        with:
          script: |
            const body = [
              '## ‚ùå Changelog Automation Failed',
              '',
              '**Workflow**: Changelog generation failed during automated execution.',
              '',
              '**Next Steps**:',
              '1. Check workflow logs: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}',
              '2. Generate manually: `npm run changelog:generate`',
              '3. Review configuration: `config/changelog/cliff.toml`',
              '',
              '**Common Issues**:',
              '- git-cliff installation failed',
              '- Invalid configuration syntax',
              '- Missing conventional commit format',
              '',
              '_Workflow: `.github/workflows/changelog-automation.yml`_'
            ].join('\n');

            // Only comment if this is a PR context
            if (context.issue.number) {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body
              });
            }
