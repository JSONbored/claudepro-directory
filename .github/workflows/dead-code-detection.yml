name: Dead Code Detection

on:
  # Weekly schedule (Mondays at 3am UTC)
  schedule:
    - cron: '0 3 * * 1'

  # Allow manual trigger
  workflow_dispatch:

  # Only on PRs when Knip config or source files change
  pull_request:
    branches: [main, dev]
    paths:
      - 'src/**'
      - 'scripts/**'
      - 'package.json'
      - 'tsconfig.json'
      - 'config/tools/knip.json'

jobs:
  detect-dead-code:
    name: Analyze Unused Code with Knip
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
      issues: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for better analysis

      - name: Setup Node.js with dependencies
        uses: ./.github/actions/setup-node-deps
        with:
          skip-build-content: 'true'

      - name: Run Knip (Dead Code Detection)
        id: knip
        run: |
          echo "## üîç Dead Code Detection Results" >> $GITHUB_STEP_SUMMARY

          # Run Knip and capture output
          if npx knip -c config/tools/knip.json --reporter json > knip-output.json 2>&1; then
            echo "‚úÖ No dead code detected!" >> $GITHUB_STEP_SUMMARY
            echo "status=success" >> $GITHUB_OUTPUT
          else
            # Knip found issues - format them nicely
            echo "‚ö†Ô∏è Dead code detected - see details below" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY

            # Parse and display results
            if [ -f knip-output.json ]; then
              # Extract key metrics from JSON output
              echo "### Summary" >> $GITHUB_STEP_SUMMARY
              npx knip -c config/tools/knip.json --reporter markdown >> $GITHUB_STEP_SUMMARY 2>&1 || true
            fi

            echo "status=has_issues" >> $GITHUB_OUTPUT
          fi
        continue-on-error: true

      - name: Annotate PR with findings
        if: github.event_name == 'pull_request' && steps.knip.outputs.status == 'has_issues'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            // Read Knip output
            let output = '';
            try {
              output = fs.readFileSync('knip-output.json', 'utf8');
            } catch (e) {
              console.log('Could not read knip output file');
              return;
            }

            // Create comment on PR
            const comment = `## üîç Dead Code Detection\n\nKnip detected unused code in this PR.\n\n### How to fix:\n1. Remove unused exports\n2. Delete unused files\n3. Update \`config/tools/knip.json\` if false positives\n\nRun locally: \`npm run analyze:unused\``;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Upload Knip report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: knip-report
          path: knip-output.json
          retention-days: 30

      - name: Fail if dead code detected (main branch only)
        if: github.ref == 'refs/heads/main' && steps.knip.outputs.status == 'has_issues'
        run: |
          echo "‚ùå Dead code detected on main branch - failing build"
          exit 1

      - name: Success summary
        if: steps.knip.outputs.status == 'success'
        run: |
          echo "‚úÖ Code quality check passed - no dead code detected"
