name: Security

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'content/**/*.json'
      - 'templates/**'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'content/**/*.json'
      - 'templates/**'
  schedule:
    - cron: '0 3 * * 1'  # Weekly security scan on Mondays at 3am UTC

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  detect-changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      deps: ${{ steps.filter.outputs.deps }}
      code: ${{ steps.filter.outputs.code }}
      content: ${{ steps.filter.outputs.content }}
    steps:
      - uses: actions/checkout@v5
      - name: Check changed files
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            deps:
              - 'package.json'
              - 'package-lock.json'
            code:
              - 'src/**'
              - 'scripts/**'
              - 'config/**'
              - 'next.config.mjs'
              - 'tailwind.config.ts'
            content:
              - 'content/**'
              - 'templates/**'
  secrets:
    name: Secret Scanning
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [detect-changes]
    # Skip on scheduled runs; run for PRs or when code/deps changed
    if: github.event_name != 'schedule' && (github.event_name == 'pull_request' || needs.detect-changes.outputs.code == 'true' || needs.detect-changes.outputs.deps == 'true')

    steps:
    - uses: actions/checkout@v5
      with:
        fetch-depth: 0  # Full history for better secret detection

    - name: Check for hardcoded secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: ${{ github.event.repository.default_branch }}
        head: HEAD
        extra_args: --only-verified --exclude-paths=.github/trufflehog-exclude.txt
      continue-on-error: true

  # Build for CodeQL analysis using reusable workflow
  build-for-codeql:
    name: Build for CodeQL
    uses: ./.github/workflows/build-reusable.yml
    with:
      cache-key-suffix: 'codeql'
      upload-artifact: true

  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: [build-for-codeql]
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - uses: ./.github/actions/setup-node-deps
      with:
        skip-build-content: 'true'

    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{ needs.build-for-codeql.outputs.artifact-name }}
        path: ./

    - name: Verify build restoration
      run: |
        if [ ! -d ".next" ]; then
          echo "❌ Build artifact restoration failed"
          exit 1
        fi
        echo "✅ Build artifact restored for CodeQL analysis"

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v4
      with:
        languages: javascript-typescript
        queries: +security-extended,security-and-quality

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v4
      with:
        category: "/language:javascript-typescript"
        upload: true

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [detect-changes]
    if: github.event_name == 'pull_request' && needs.detect-changes.outputs.deps == 'true'
    permissions:
      contents: read
      pull-requests: write

    steps:
    - uses: actions/checkout@v5

    - name: Dependency Review
      uses: actions/dependency-review-action@v4
      with:
        fail-on-severity: critical
        vulnerability-check: true
        license-check: false
        comment-summary-in-pr: always
        warn-only: true

  npm-audit:
    name: NPM Security Audit
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [detect-changes]
    # Run when dependencies change or on schedule
    if: needs.detect-changes.outputs.deps == 'true' || github.event_name == 'schedule'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - uses: ./.github/actions/setup-node-deps

    - name: Run npm audit
      run: npm audit --audit-level=moderate
      continue-on-error: true

    - name: Upload audit results
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: npm-audit-results
        path: npm-audit.json
        retention-days: 30
        if-no-files-found: ignore

  socket-security:
    name: Socket Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [detect-changes]
    if: vars.SOCKET_SECURITY_API_KEY != '' && (needs.detect-changes.outputs.deps == 'true' || github.event_name == 'schedule')
    permissions:
      contents: read
      pull-requests: write
      statuses: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Setup Python for Socket CLI
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install Socket CLI
      run: pip install socketsecurity --upgrade

    - name: Run Socket Security Scan
      env:
        SOCKET_SECURITY_API_KEY: ${{ secrets.SOCKET_SECURITY_API_KEY }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          socketcli \
            --target-path $GITHUB_WORKSPACE \
            --scm github \
            --pr-number ${{ github.event.pull_request.number }}
        else
          socketcli \
            --target-path $GITHUB_WORKSPACE \
            --scm github
        fi
      continue-on-error: true  # Don't block PRs initially
