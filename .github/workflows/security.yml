name: Security

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 3 * * 1'  # Weekly security scan on Mondays

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  secrets:
    name: Secret Scanning
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.event_name != 'schedule'  # Skip on scheduled runs

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for better secret detection

    - name: Check for hardcoded secrets
      uses: trufflesecurity/trufflehog@v3.84.2
      with:
        path: ./
        base: ${{ github.event.repository.default_branch }}
        head: HEAD
      continue-on-error: true

  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: javascript-typescript
        queries: +security-extended,security-and-quality

    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:javascript-typescript"
        upload: true
        wait-for-processing: true

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.event_name == 'pull_request'
    permissions:
      contents: read
      pull-requests: write

    steps:
    - uses: actions/checkout@v4
    - name: Dependency Review
      uses: actions/dependency-review-action@v4
      with:
        fail-on-severity: critical  # Only fail on critical vulnerabilities
        vulnerability-check: true
        license-check: false  # Disable license checking since we're open source
        comment-summary-in-pr: always
        warn-only: true  # Don't fail builds for scorecard warnings

  npm-audit:
    name: NPM Security Audit
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci --ignore-scripts

    - name: Run security audit
      run: |
        npm audit --audit-level=moderate
        npm run build:content  # Ensure generated files don't have vulnerabilities
      continue-on-error: true

    - name: Upload audit results
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: npm-audit-results
        path: npm-audit.json
        retention-days: 30