name: Submit Skill
description: Share a Claude skill guide with practical examples
title: "[Skill]: "
labels: ["content-submission", "skill", "needs-review"]
assignees: []

body:
  - type: markdown
    attributes:
      value: |
        Thanks for sharing your skill guide! ðŸ“š
        
        **Need help?** Copy our [simple template](https://github.com/JSONbored/claudepro-directory/blob/main/templates/content/skills-template-simple.json) or [full template](https://github.com/JSONbored/claudepro-directory/blob/main/templates/content/skills-template.json) to get started!

  - type: input
    id: name
    attributes:
      label: Skill Name
      placeholder: e.g., "PDF Processing", "Excel Data Analysis", "Image Manipulation"
    validations:
      required: true

  - type: textarea
    id: description
    attributes:
      label: What does this skill do?
      placeholder: Brief description of the capability and common use cases (2-3 sentences)
    validations:
      required: true

  - type: textarea
    id: content
    attributes:
      label: Skill Guide Content
      description: Comprehensive guide with overview, capabilities, and best practices
      render: markdown
      placeholder: |
        # Skill Overview
        
        Brief introduction to the skill and its applications.
        
        ## Key Capabilities
        - Capability 1
        - Capability 2
        - Capability 3
        
        ## Best Practices
        - Best practice 1
        - Best practice 2
    validations:
      required: true

  - type: textarea
    id: requirements
    attributes:
      label: Requirements
      description: List required dependencies, packages, or tools (one per line)
      placeholder: |
        Python 3.11+
        pypdf
        pdfplumber
        poppler-utils
    validations:
      required: true

  - type: textarea
    id: examples
    attributes:
      label: Code Examples (JSON array)
      description: Provide runnable code examples showing key operations
      render: json
      placeholder: |
        [
          {
            "title": "Extract Text from PDF",
            "language": "python",
            "code": "from pypdf import PdfReader\nreader = PdfReader('file.pdf')\ntext = reader.pages[0].extract_text()\nprint(text)"
          },
          {
            "title": "Merge Multiple PDFs",
            "language": "python",
            "code": "from pypdf import PdfWriter\nwriter = PdfWriter()\nfor path in ['a.pdf', 'b.pdf']:\n    writer.append(path)\nwriter.write('merged.pdf')"
          }
        ]
    validations:
      required: true

  - type: textarea
    id: troubleshooting
    attributes:
      label: Common Issues & Solutions (optional)
      description: List common problems and how to solve them (JSON array)
      render: json
      placeholder: |
        [
          {
            "issue": "Encrypted PDF cannot be read",
            "solution": "Use qpdf --decrypt input.pdf output.pdf before processing"
          },
          {
            "issue": "OCR not working",
            "solution": "Ensure Tesseract is installed and in PATH"
          }
        ]

  - type: input
    id: tags
    attributes:
      label: Tags (optional)
      placeholder: e.g., pdf, python, automation, documents, ocr

  - type: input
    id: documentation-url
    attributes:
      label: Documentation URL (optional)
      placeholder: e.g., https://pypi.org/project/pypdf/

  - type: checkboxes
    id: checks
    attributes:
      label: Quick Check
      options:
        - label: I've tested all code examples and they work
          required: true
        - label: I've verified all requirements are listed
          required: true
        - label: This doesn't contain sensitive information
          required: true
