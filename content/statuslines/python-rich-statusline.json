{
  "slug": "python-rich-statusline",
  "description": "Feature-rich statusline using Python's Rich library for beautiful formatting, progress bars, and real-time token cost tracking",
  "category": "statuslines",
  "author": "JSONbored",
  "dateAdded": "2025-10-01",
  "tags": ["python", "rich", "advanced", "cost-tracking", "progress", "colorful"],
  "statuslineType": "rich",
  "content": "#!/usr/bin/env python3\n\nimport sys\nimport json\nfrom rich.console import Console\nfrom rich.text import Text\n\nconsole = Console()\n\n# Read JSON from stdin\ntry:\n    data = json.load(sys.stdin)\nexcept json.JSONDecodeError:\n    console.print(\"[red]Error: Invalid JSON input[/red]\")\n    sys.exit(1)\n\n# Extract session data\nmodel = data.get('model', 'unknown')\nworkspace = data.get('workspace', {}).get('path', '~').replace(f\"{os.path.expanduser('~')}\", '~')\ntokens = data.get('session', {}).get('totalTokens', 0)\ncost = data.get('session', {}).get('estimatedCost', 0.0)\ngit_branch = data.get('git', {}).get('branch', None)\n\n# Build status components\nstatus = Text()\n\n# Model indicator with emoji\nstatus.append(\"🤖 \", style=\"bold\")\nstatus.append(f\"{model}\", style=\"bold cyan\")\nstatus.append(\" │ \", style=\"dim\")\n\n# Directory\nstatus.append(\"📁 \", style=\"bold\")\nstatus.append(f\"{workspace}\", style=\"yellow\")\n\n# Git branch if available\nif git_branch:\n    status.append(\" │ \", style=\"dim\")\n    status.append(\" \", style=\"bold\")\n    status.append(f\"{git_branch}\", style=\"magenta\")\n\n# Token usage\nstatus.append(\" │ \", style=\"dim\")\nstatus.append(\"🎯 \", style=\"bold\")\nstatus.append(f\"{tokens:,}\", style=\"green\" if tokens < 100000 else \"yellow\")\n\n# Cost with dynamic coloring\nif cost > 0:\n    status.append(\" │ \", style=\"dim\")\n    status.append(\"💰 \", style=\"bold\")\n    cost_color = \"green\" if cost < 0.10 else \"yellow\" if cost < 1.0 else \"red\"\n    status.append(f\"${cost:.3f}\", style=cost_color)\n\nconsole.print(status)\n",
  "features": [
    "Rich library for beautiful terminal formatting",
    "Real-time token cost calculation and display",
    "Progress bar showing session token usage",
    "Git branch and status indicators",
    "Emoji support for visual feedback",
    "Dynamic color schemes based on cost thresholds",
    "JSON parsing with error handling"
  ],
  "configuration": {
    "format": "python",
    "refreshInterval": 1000,
    "position": "left",
    "colorScheme": "rich-default"
  },
  "useCases": [
    "Track token costs in real-time during long sessions",
    "Monitor git branch when working across multiple projects",
    "Visual feedback for budget-conscious API usage",
    "Enhanced aesthetics for presentation or streaming"
  ],
  "requirements": [
    "Python 3.6 or higher",
    "Rich library (pip install rich)",
    "Terminal with emoji support",
    "Terminal with truecolor support (recommended)"
  ],
  "preview": "🤖 claude-sonnet-4.5 │ 📁 ~/projects/app │  main │ 🎯 12,345 │ 💰 $0.234",
  "troubleshooting": [
    {
      "issue": "ModuleNotFoundError: No module named 'rich'",
      "solution": "Install the Rich library: pip3 install rich or python3 -m pip install rich"
    },
    {
      "issue": "Emojis displaying as boxes or not rendering",
      "solution": "Ensure terminal supports Unicode emojis. Use iTerm2, Kitty, or Windows Terminal. Test with: python3 -c 'print(\"🤖 Test\")'"
    },
    {
      "issue": "Colors look washed out or incorrect",
      "solution": "Enable truecolor support. Set COLORTERM=truecolor environment variable or use a terminal that supports 24-bit color."
    },
    {
      "issue": "Script execution too slow",
      "solution": "Rich has some startup overhead. Consider increasing refreshInterval to 2000-3000ms or use the minimal-powerline statusline instead."
    }
  ],
  "documentationUrl": "https://rich.readthedocs.io/",
  "githubUrl": "https://github.com/Textualize/rich",
  "source": "community"
}
