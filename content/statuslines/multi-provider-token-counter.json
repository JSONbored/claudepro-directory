{
  "slug": "multi-provider-token-counter",
  "description": "Multi-provider AI token counter displaying real-time context usage for Claude (1M), GPT-4.1 (1M), Gemini 2.x (1M), and Grok 3 (1M) with 2025 verified limits",
  "category": "statuslines",
  "author": "JSONbored",
  "dateAdded": "2025-10-16",
  "tags": ["tokens", "multi-provider", "context-limits", "ai-models", "monitoring"],
  "statuslineType": "custom",
  "content": "#!/usr/bin/env bash\n\n# Multi-Provider Token Counter - 2025 Context Limits\n# Supports: Claude Sonnet 4 (1M), GPT-4.1 (1M), Gemini 2.x (1M), Grok 3 (1M)\n\nread -r input\n\n# Extract model and token info\nmodel=$(echo \"$input\" | jq -r '.model // \"unknown\"')\ntokens=$(echo \"$input\" | jq -r '.session.totalTokens // 0')\n\n# Determine provider and context limit\nif [[ \"$model\" == *\"claude\"* ]]; then\n  if [[ \"$model\" == *\"sonnet-4\"* ]] || [[ \"$model\" == *\"sonnet-3.5\"* ]]; then\n    limit=1000000\n    provider=\"Claude\"\n    icon=\"üîÆ\"\n  else\n    limit=200000\n    provider=\"Claude\"\n    icon=\"üîÆ\"\n  fi\nelif [[ \"$model\" == *\"gpt-4.1\"* ]]; then\n  limit=1000000\n  provider=\"GPT-4.1\"\n  icon=\"ü§ñ\"\nelif [[ \"$model\" == *\"gpt-4o\"* ]]; then\n  limit=128000\n  provider=\"GPT-4o\"\n  icon=\"ü§ñ\"\nelif [[ \"$model\" == *\"gemini\"* ]]; then\n  if [[ \"$model\" == *\"2.\"* ]] || [[ \"$model\" == *\"1.5-pro\"* ]]; then\n    limit=1000000\n    provider=\"Gemini\"\n    icon=\"üíé\"\n  else\n    limit=128000\n    provider=\"Gemini\"\n    icon=\"üíé\"\n  fi\nelif [[ \"$model\" == *\"grok-3\"* ]]; then\n  limit=1000000\n  provider=\"Grok\"\n  icon=\"‚ö°\"\nelif [[ \"$model\" == *\"grok-4\"* ]]; then\n  limit=256000\n  provider=\"Grok\"\n  icon=\"‚ö°\"\nelse\n  limit=100000\n  provider=\"Unknown\"\n  icon=\"‚ùì\"\nfi\n\n# Calculate usage percentage\npercentage=$(awk \"BEGIN {printf \\\"%.1f\\\", ($tokens / $limit) * 100}\")\n\n# Color coding based on usage\nif (( $(echo \"$percentage < 50\" | bc -l) )); then\n  color=\"\\033[32m\"  # Green\nelif (( $(echo \"$percentage < 80\" | bc -l) )); then\n  color=\"\\033[33m\"  # Yellow\nelse\n  color=\"\\033[31m\"  # Red\nfi\n\n# Format token count with commas\ntokens_formatted=$(printf \"%'d\" $tokens)\nlimit_formatted=$(printf \"%'d\" $limit)\n\n# Output statusline\necho -e \"${icon} ${provider} ‚îÇ ${color}${tokens_formatted}${color}\\033[0m/${limit_formatted} (${percentage}%)\\033[0m\"\n",
  "features": [
    "Automatic provider detection (Claude, GPT-4, Gemini, Grok)",
    "2025 verified context limits (1M for latest models)",
    "Real-time usage percentage calculation",
    "Color-coded warnings (green <50%, yellow <80%, red ‚â•80%)",
    "Formatted token counts with thousand separators",
    "Provider-specific icons for visual identification",
    "Supports legacy models with correct limits"
  ],
  "configuration": {
    "format": "bash",
    "refreshInterval": 1000,
    "position": "right",
    "colorScheme": "provider-aware"
  },
  "useCases": [
    "Monitoring context usage across multiple AI providers",
    "Tracking token consumption to avoid context limit errors",
    "Comparing model efficiency across providers",
    "Real-time awareness of remaining context budget",
    "Multi-model workflow optimization"
  ],
  "requirements": [
    "Bash shell",
    "jq JSON processor",
    "bc calculator for percentage math",
    "Terminal with Unicode and color support"
  ],
  "preview": "üîÆ Claude ‚îÇ 456,789/1,000,000 (45.7%)",
  "troubleshooting": [
    {
      "issue": "Percentage shows >100% or incorrect limit",
      "solution": "Update model detection logic with latest model names. Check Claude docs for current model IDs."
    },
    {
      "issue": "Icons showing as boxes",
      "solution": "Install Nerd Font or emoji-capable font. Test with: echo 'üîÆ ü§ñ üíé ‚ö°'"
    },
    {
      "issue": "Colors not working",
      "solution": "Ensure TERM environment variable supports colors: echo $TERM should show 'xterm-256color' or similar"
    }
  ],
  "documentationUrl": "https://docs.anthropic.com/claude/docs/models-overview",
  "source": "community"
}
