{
  "slug": "redis-mcp-server",
  "description": "Official Redis MCP server providing natural language interface for Redis data management and operations",
  "category": "mcp",
  "author": "Redis",
  "dateAdded": "2025-09-20",
  "tags": ["redis", "cache", "database", "nosql", "official"],
  "content": "The official Redis MCP Server provides a natural language interface for AI agents to manage and search data in Redis, supporting various data structures and integrations.",
  "features": [
    "String operations with TTL support",
    "Hash, list, set, and sorted set management",
    "Pub/Sub messaging",
    "Stream operations",
    "JSON data handling",
    "Vector search capabilities",
    "Server management and monitoring"
  ],
  "installation": {
    "claudeDesktop": {
      "steps": [
        "Install via Smithery CLI: npx -y @smithery/cli install @redis/mcp-redis --client claude",
        "Or install via uvx: uvx --from git+https://github.com/redis/mcp-redis.git redis-mcp-server",
        "Configure Redis connection URL",
        "Add server configuration to Claude Desktop",
        "Restart Claude Desktop"
      ],
      "configPath": {
        "macOS": "~/Library/Application Support/Claude/claude_desktop_config.json",
        "windows": "%APPDATA%\\Claude\\claude_desktop_config.json"
      }
    },
    "claudeCode": "uvx --from git+https://github.com/redis/mcp-redis.git redis-mcp-server --url redis://localhost:6379/0"
  },
  "configuration": {
    "claudeDesktop": {
      "mcp": {
        "redis": {
          "command": "uvx",
          "args": [
            "--from",
            "git+https://github.com/redis/mcp-redis.git",
            "redis-mcp-server",
            "--url",
            "redis://localhost:6379/0"
          ]
        }
      }
    },
    "claudeCode": {
      "mcp": {
        "redis": {
          "command": "uvx",
          "args": [
            "--from",
            "git+https://github.com/redis/mcp-redis.git",
            "redis-mcp-server",
            "--url",
            "redis://localhost:6379/0"
          ]
        }
      }
    }
  },
  "package": "@redis/mcp-redis",
  "source": "official",
  "useCases": [
    "High-performance caching solutions",
    "Session management and storage",
    "Real-time messaging with pub/sub",
    "Leaderboards and ranking systems",
    "Stream processing and event sourcing",
    "Vector similarity search",
    "Rate limiting and counters"
  ],
  "security": [
    "Redis ACL user management",
    "SSL/TLS encryption support",
    "Password authentication",
    "Read-only user configurations",
    "Network security controls"
  ],
  "troubleshooting": [
    {
      "issue": "Connection refused or Redis server not accessible",
      "solution": "Verify Redis running with redis-cli ping (should return PONG). Check URL format: redis://localhost:6379/0 or redis://user:password@host:port/db. Confirm network allows port 6379. Test with redis-cli -u URL command."
    },
    {
      "issue": "NOAUTH Authentication required error",
      "solution": "Add password to connection URL: redis://:password@host:6379. Use AUTH command or configure ACL username. Verify requirepass in redis.conf matches. Check ACL user exists with ACL LIST command."
    },
    {
      "issue": "NOPERM user has no permissions to run command or access key",
      "solution": "Grant permissions with ACL SETUSER username +@all ~*. Check ACL rules with ACL GETUSER username. Ensure user has +@read +@write categories. Verify key patterns allow access with ~key:* syntax."
    },
    {
      "issue": "ACL authentication failed or WRONGPASS invalid password",
      "solution": "Verify password matches ACL user with ACL GETUSER. Check ACL file loaded correctly (restart Redis after editing). Ensure user not flagged nopass without valid passwords. View security events with ACL LOG."
    },
    {
      "issue": "TLS/SSL connection error or certificate validation failed",
      "solution": "Use rediss:// (note double 's') for TLS connections. Add tls=true parameter to URL. Verify Redis built with TLS support (redis-server --version). Check certificates match CA and have correct permissions."
    }
  ],
  "examples": [
    {
      "title": "Store and retrieve cached data with expiration",
      "code": "Ask Claude: \"Store and retrieve cached data with expiration\"",
      "language": "plaintext",
      "description": "Common usage pattern for this MCP server"
    },
    {
      "title": "Manage user sessions and preferences",
      "code": "Ask Claude: \"Manage user sessions and preferences\"",
      "language": "plaintext",
      "description": "Common usage pattern for this MCP server"
    },
    {
      "title": "Implement real-time chat with pub/sub",
      "code": "Ask Claude: \"Implement real-time chat with pub/sub\"",
      "language": "plaintext",
      "description": "Common usage pattern for this MCP server"
    },
    {
      "title": "Create leaderboards with sorted sets",
      "code": "Ask Claude: \"Create leaderboards with sorted sets\"",
      "language": "plaintext",
      "description": "Common usage pattern for this MCP server"
    },
    {
      "title": "Process events using Redis streams",
      "code": "Ask Claude: \"Process events using Redis streams\"",
      "language": "plaintext",
      "description": "Common usage pattern for this MCP server"
    }
  ],
  "requiresAuth": true,
  "permissions": ["read", "write", "admin"],
  "configLocation": "claude_desktop_config.json",
  "documentationUrl": "https://github.com/redis/mcp-redis",
  "seoTitle": "Redis MCP Server for Claude"
}
