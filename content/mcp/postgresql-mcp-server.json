{
  "slug": "postgresql-mcp-server",
  "description": "Official MCP server providing read-only access to PostgreSQL databases with schema inspection and query capabilities",
  "category": "mcp",
  "author": "Anthropic",
  "dateAdded": "2025-09-16",
  "tags": ["postgresql", "database", "sql", "official", "anthropic"],
  "content": "The official PostgreSQL MCP Server from Anthropic provides read-only access to PostgreSQL databases, enabling Claude to inspect schemas and execute safe queries.",
  "features": [
    "Read-only access for safe database exploration",
    "Automatic discovery of table structures and columns",
    "Execute SELECT queries within read-only transactions",
    "Access detailed database metadata and structure",
    "Perform data analysis without altering database state",
    "Support for SSL connections and authentication"
  ],
  "installation": {
    "claudeDesktop": {
      "steps": [
        "Open your Claude Desktop configuration file",
        "Add the PostgreSQL MCP server configuration with connection string",
        "Restart Claude Desktop",
        "Ask Claude to list tables to verify connection"
      ],
      "configPath": {
        "macOS": "~/Library/Application Support/Claude/claude_desktop_config.json",
        "windows": "%APPDATA%\\Claude\\claude_desktop_config.json"
      }
    },
    "claudeCode": "Create a .mcp.json file with PostgreSQL server configuration and connection string"
  },
  "configuration": {
    "claudeDesktop": {
      "mcp": {
        "postgres": {
          "command": "npx",
          "args": ["-y", "@modelcontextprotocol/server-postgres", "postgresql://localhost/mydb"]
        }
      }
    },
    "claudeCode": {
      "mcp": {
        "postgres": {
          "command": "npx",
          "args": ["-y", "@modelcontextprotocol/server-postgres", "postgresql://localhost/mydb"]
        }
      }
    }
  },
  "package": "@modelcontextprotocol/server-postgres",
  "source": "official",
  "useCases": [
    "Understand database schema and relationships",
    "Generate reports from existing data",
    "Analyze data patterns and distributions",
    "Create documentation from database structure",
    "Write and test SELECT queries",
    "Explore unfamiliar database schemas"
  ],
  "security": [
    "All queries execute in read-only transactions",
    "INSERT, UPDATE, DELETE operations are prevented",
    "Supports SSL/TLS encryption for connections",
    "Respects existing database user permissions",
    "Safe exploration without data modification risks"
  ],
  "troubleshooting": [
    {
      "issue": "Connection refused or database not accessible",
      "solution": "Verify PostgreSQL is running with pg_isready command. Check connection string format: postgresql://user:password@host:port/database. Test with psql command first. Verify firewall allows connections on port 5432."
    },
    {
      "issue": "SSL connection error - wrong version number or verify failed",
      "solution": "Add sslmode parameter: postgresql://host/db?sslmode=require. Verify PostgreSQL supports TLS version (check pg_config --configure). Use sslmode=disable for local dev only. Check certificate matches CA in ssl_ca_file."
    },
    {
      "issue": "Authentication failed for user or password rejected",
      "solution": "Verify username/password in connection string exact match. Check pg_hba.conf allows connection method (md5, scram-sha-256). Ensure user exists with GRANT SELECT permissions. Test auth with psql -U username -d database."
    },
    {
      "issue": "Certificate authentication failed - CN mismatch",
      "solution": "Verify certificate CN matches PostgreSQL username exactly. Configure pg_ident.conf for username mapping if needed. Check ssl_cert_file and ssl_key_file permissions (owned by postgres user). Ensure client cert trusted by server CA."
    },
    {
      "issue": "Permission denied on table or schema access error",
      "solution": "Grant SELECT permissions: GRANT SELECT ON ALL TABLES IN SCHEMA public TO username. Verify read-only user has pg_read_all_data role. Check schema permissions with \\dp command in psql. Ensure user connected to correct database."
    }
  ],
  "examples": [
    {
      "title": "What tables exist in my database?",
      "code": "Ask Claude: \"What tables exist in my database?\"",
      "language": "plaintext",
      "description": "Common usage pattern for this MCP server"
    },
    {
      "title": "Describe the structure of the users table",
      "code": "Ask Claude: \"Describe the structure of the users table\"",
      "language": "plaintext",
      "description": "Common usage pattern for this MCP server"
    },
    {
      "title": "How many records are in each table?",
      "code": "Ask Claude: \"How many records are in each table?\"",
      "language": "plaintext",
      "description": "Common usage pattern for this MCP server"
    },
    {
      "title": "Write a query to find active users from last month",
      "code": "Ask Claude: \"Write a query to find active users from last month\"",
      "language": "plaintext",
      "description": "Common usage pattern for this MCP server"
    },
    {
      "title": "Generate documentation for my database schema",
      "code": "Ask Claude: \"Generate documentation for my database schema\"",
      "language": "plaintext",
      "description": "Common usage pattern for this MCP server"
    }
  ],
  "requiresAuth": true,
  "authType": "connection_string",
  "permissions": ["read"],
  "readOnly": true,
  "configLocation": "claude_desktop_config.json",
  "documentationUrl": "https://modelcontextprotocol.io/examples"
}
