{
  "title": "GitHub MCP Server",
  "description": "Official GitHub MCP server providing comprehensive GitHub API access for repository management, file operations, and search functionality",
  "category": "mcp",
  "author": "GitHub",
  "dateAdded": "2025-09-18",
  "tags": [
    "github",
    "git",
    "repositories",
    "api",
    "official"
  ],
  "content": "The official GitHub MCP Server provides comprehensive access to the GitHub API, enabling file operations, repository management, search functionality, and more through Claude.\n\n## Features\n\n### Core Capabilities\n- **File Operations**: Create, read, update, and delete files across repositories\n- **Repository Management**: Access repository information, branches, and metadata\n- **Search Functionality**: Search code, issues, pull requests, and users\n- **Branch Management**: Automatic branch creation and Git history preservation\n- **Batch Operations**: Support for both single-file and multi-file operations\n\n### Advanced Features\n- **Automatic Branch Creation**: Branches are created automatically when needed\n- **Comprehensive Error Handling**: Clear error messages for common issues\n- **Git History Preservation**: Operations maintain proper Git history\n- **Advanced Search**: Search across code, issues/PRs, and users\n- **Repository Insights**: Access repository statistics and information\n\n## Installation & Setup\n\n### Prerequisites\n- GitHub Personal Access Token with appropriate permissions\n- Node.js installed on your system\n\n### For Claude Desktop\n\n1. **Open Configuration**:\n   - Windows: `%APPDATA%/Claude/claude_desktop_config.json`\n   - macOS: `~/Library/Application Support/Claude/claude_desktop_config.json`\n\n2. **Add Server Configuration**:\n```json\n{\n  \"mcpServers\": {\n    \"github\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"@modelcontextprotocol/server-github\"\n      ],\n      \"env\": {\n        \"GITHUB_PERSONAL_ACCESS_TOKEN\": \"your_github_token_here\"\n      }\n    }\n  }\n}\n```\n\n3. **Restart Claude Desktop** for changes to take effect.\n\n### For Claude Code\n\nCreate a `.mcp.json` file in your project root:\n```json\n{\n  \"mcpServers\": {\n    \"github\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"-y\",\n        \"@modelcontextprotocol/server-github\"\n      ],\n      \"env\": {\n        \"GITHUB_PERSONAL_ACCESS_TOKEN\": \"your_github_token_here\"\n      }\n    }\n  }\n}\n```\n\n## Authentication Setup\n\n### Creating a GitHub Personal Access Token\n\n1. Go to GitHub Settings → Developer settings → Personal access tokens\n2. Click \"Generate new token (classic)\"\n3. Select appropriate scopes:\n   - `repo` - Full control of private repositories\n   - `public_repo` - Access public repositories\n   - `read:user` - Read user profile data\n   - `user:email` - Access user email addresses\n\n4. Copy the generated token and add it to your configuration\n\n### Environment Variable Setup\n\n```bash\n# Option 1: Set in environment\nexport GITHUB_PERSONAL_ACCESS_TOKEN=\"your_token_here\"\n\n# Option 2: Add to configuration file (shown above)\n```\n\n## Configuration Examples\n\n### Basic Setup\n```json\n{\n  \"mcpServers\": {\n    \"github\": {\n      \"command\": \"npx\",\n      \"args\": [\"-y\", \"@modelcontextprotocol/server-github\"],\n      \"env\": {\n        \"GITHUB_PERSONAL_ACCESS_TOKEN\": \"ghp_xxxxxxxxxxxxxxxxxxxx\"\n      }\n    }\n  }\n}\n```\n\n### Organization-Specific Setup\n```json\n{\n  \"mcpServers\": {\n    \"github\": {\n      \"command\": \"npx\",\n      \"args\": [\"-y\", \"@modelcontextprotocol/server-github\"],\n      \"env\": {\n        \"GITHUB_PERSONAL_ACCESS_TOKEN\": \"ghp_xxxxxxxxxxxxxxxxxxxx\",\n        \"GITHUB_API_BASE_URL\": \"https://api.github.com\"\n      }\n    }\n  }\n}\n```\n\n## Key Use Cases\n\n### Repository Management\n- Browse and search across repositories\n- Access repository information and statistics\n- Manage repository settings and metadata\n- View commit history and branch information\n\n### File Operations\n- Read files from any accessible repository\n- Create new files with proper Git history\n- Update existing files while preserving history\n- Delete files when necessary\n\n### Development Workflow\n- Search code across repositories\n- Find issues and pull requests\n- Access repository documentation\n- Analyze codebase structure and patterns\n\n### Collaboration\n- Search for users and organizations\n- Access team and organization information\n- View contributor statistics\n- Find relevant repositories and projects\n\n## Security & Best Practices\n\n- **Token Security**: Store tokens securely and rotate regularly\n- **Scope Limitation**: Grant only necessary permissions\n- **Rate Limiting**: Built-in respect for GitHub API rate limits\n- **Error Handling**: Comprehensive error handling for API issues\n- **Audit Trail**: All operations maintain proper Git history\n\n## Troubleshooting\n\n### Common Issues\n\n1. **Authentication Failed**: Check token validity and permissions\n2. **Rate Limit Exceeded**: Wait for rate limit reset or use authenticated requests\n3. **Repository Not Found**: Verify repository access and spelling\n4. **Permission Denied**: Ensure token has appropriate scopes\n\n### Verification\n\nAfter setup, ask Claude: \"Show me my GitHub repositories\" to verify the connection.\n\n## Usage Examples\n\n```\n# Repository Information\n\"Show me the README from my main project repository\"\n\"What are the recent commits in the develop branch?\"\n\"List all repositories in my organization\"\n\n# File Operations\n\"Read the package.json file from my project\"\n\"Create a new component file in the src/components directory\"\n\"Update the documentation in the docs folder\"\n\n# Search Operations\n\"Search for functions that use the authentication library\"\n\"Find all open issues with the bug label\"\n\"Show me pull requests that mention performance\"\n\n# Development Insights\n\"What's the structure of my project repository?\"\n\"Show me the most active contributors\"\n\"Find repositories similar to my current project\"\n```\n\n## Migration Notice\n\nNote: Development has moved to `github.com/github/github-mcp-server`. While the npm package `@modelcontextprotocol/server-github` is still functional, check the new repository for the latest updates and features.",
  "configuration": {
    "package": "@modelcontextprotocol/server-github",
    "command": "npx",
    "args": ["-y", "@modelcontextprotocol/server-github"],
    "requiresAuth": true,
    "authType": "personal_access_token",
    "permissions": ["repo", "public_repo", "read:user"],
    "configLocation": "claude_desktop_config.json"
  },
  "githubUrl": "https://github.com/github/github-mcp-server",
  "documentationUrl": "https://www.npmjs.com/package/@modelcontextprotocol/server-github",
  "source": "official"
}