{
  "slug": "github-mcp-server",
  "description": "Official GitHub MCP server providing comprehensive GitHub API access for repository management, file operations, and search functionality",
  "category": "mcp",
  "author": "GitHub",
  "dateAdded": "2025-09-18",
  "tags": ["github", "git", "repositories", "api", "official"],
  "content": "Access the GitHub API through Claude for comprehensive repository management, file operations, and search functionality.",
  "features": [
    "Create, read, update, and delete files across repositories",
    "Access repository information, branches, and metadata",
    "Search code, issues, pull requests, and users",
    "Automatic branch creation and Git history preservation",
    "Batch operations support for multi-file changes",
    "Repository insights and contributor statistics"
  ],
  "installation": {
    "claudeDesktop": {
      "steps": [
        "Generate a GitHub Personal Access Token with repo permissions",
        "Open Claude Desktop configuration file",
        "Add the GitHub MCP server configuration with your token",
        "Restart Claude Desktop",
        "Verify connection by asking Claude to show your repositories"
      ],
      "configPath": {
        "macOS": "~/Library/Application Support/Claude/claude_desktop_config.json",
        "windows": "%APPDATA%\\Claude\\claude_desktop_config.json"
      }
    },
    "claudeCode": "claude mcp add github --env GITHUB_PERSONAL_ACCESS_TOKEN=YOUR_TOKEN -- npx -y @modelcontextprotocol/server-github"
  },
  "configuration": {
    "claudeDesktop": {
      "mcp": {
        "github": {
          "command": "npx",
          "args": ["-y", "@modelcontextprotocol/server-github"],
          "env": {
            "GITHUB_PERSONAL_ACCESS_TOKEN": "your_github_token_here"
          }
        }
      }
    },
    "claudeCode": {
      "mcp": {
        "github": {
          "command": "npx",
          "args": ["-y", "@modelcontextprotocol/server-github"],
          "env": {
            "GITHUB_PERSONAL_ACCESS_TOKEN": "${GITHUB_PERSONAL_ACCESS_TOKEN}"
          }
        }
      }
    }
  },
  "package": "@modelcontextprotocol/server-github",
  "source": "official",
  "useCases": [
    "Browse and manage repository files and folders",
    "Search code across multiple repositories",
    "Access repository information and commit history",
    "Create and update files with proper Git history",
    "Find issues, pull requests, and collaborators",
    "Analyze codebase structure and development patterns"
  ],
  "security": [
    "Use Personal Access Tokens with minimal required scopes",
    "Store tokens securely and rotate regularly",
    "Respect GitHub API rate limits",
    "All operations maintain proper Git history",
    "Built-in error handling for API issues"
  ],
  "troubleshooting": [
    {
      "issue": "API rate limit exceeded: 5000 requests per hour hit",
      "solution": "Personal access tokens have 5,000 requests/hour limit. Wait for hourly reset or use GitHub App with 15,000/hour limit for Enterprise Cloud. Check X-RateLimit-Reset header for reset time."
    },
    {
      "issue": "HTTP 401 unauthorized error with valid token",
      "solution": "Regenerate personal access token from GitHub Settings > Developer Settings. Verify token includes repo scope for repository access. Check token hasn't expired and update GITHUB_PERSONAL_ACCESS_TOKEN in config."
    },
    {
      "issue": "403 forbidden when accessing organization repos",
      "solution": "Authorize token for SSO if organization requires it. Go to GitHub Settings > Applications > Personal Access Tokens, click Configure SSO, and authorize organization. Verify you have repo access."
    },
    {
      "issue": "Repository not found or access denied error",
      "solution": "Verify repository name spelling: owner/repo-name format. Check you have read permissions to repository. For private repos, ensure token has repo scope, not just public_repo."
    },
    {
      "issue": "Cannot create or update files - permission error",
      "solution": "Verify token has repo write permissions. Check repository isn't archived or locked. For organization repos, confirm you have push access and branch protection rules allow commits."
    }
  ],
  "examples": [
    {
      "title": "Reading Repository Files",
      "code": "// Ask Claude to read a specific file\n\"Can you show me the contents of src/lib/utils.ts from my-org/my-repo?\"\n\n// Or read multiple files\n\"Show me all TypeScript files in the src/components directory of my-org/my-repo\"",
      "language": "javascript",
      "description": "Read files and directories from any GitHub repository you have access to. Claude will fetch the content and help you understand or modify it."
    },
    {
      "title": "Creating and Updating Files",
      "code": "// Create a new React component\n\"Create a new Button component in my-org/my-repo at src/components/Button.tsx with TypeScript and proper props\"\n\n// Update existing file\n\"Update the README.md in my-org/my-repo to include installation instructions for the new Button component\"",
      "language": "javascript",
      "description": "Create new files or update existing ones. The MCP server automatically creates branches and maintains proper Git history for all changes."
    },
    {
      "title": "Searching Code Across Repositories",
      "code": "// Search for specific patterns\n\"Find all files in my-org/my-repo that use the 'useState' hook\"\n\n// Search across multiple repos\n\"Search all my repositories for functions that handle authentication\"",
      "language": "javascript",
      "description": "Search code using GitHub's powerful search API. Find functions, classes, patterns, or specific implementations across your repositories."
    },
    {
      "title": "Managing Issues and Pull Requests",
      "code": "// List issues\n\"Show me all open issues with the 'bug' label in my-org/my-repo\"\n\n// Find pull requests\n\"Find all pull requests that mention 'authentication' in my-org/my-repo\"",
      "language": "javascript",
      "description": "Query issues and pull requests using GitHub's search syntax. Filter by labels, status, author, and more."
    },
    {
      "title": "Repository Information and Statistics",
      "code": "// Get repository details\n\"Show me information about my-org/my-repo including stars, forks, and main language\"\n\n// List all repositories\n\"List all repositories in my-org organization sorted by stars\"",
      "language": "javascript",
      "description": "Access repository metadata, statistics, and insights. Useful for analyzing project health and contributor activity."
    },
    {
      "title": "Batch File Operations",
      "code": "// Create multiple related files at once\n\"Create a new feature in my-org/my-repo:\n- Component file at src/components/Feature.tsx\n- Test file at src/components/Feature.test.tsx  \n- Export it from src/components/index.ts\"",
      "language": "javascript",
      "description": "Perform multiple file operations atomically. The MCP server handles branch creation and ensures all changes are committed together."
    }
  ],
  "requiresAuth": true,
  "permissions": ["repo", "public_repo", "read:user"],
  "configLocation": "claude_desktop_config.json",
  "documentationUrl": "https://www.npmjs.com/package/@modelcontextprotocol/server-github",
  "seoTitle": "GitHub MCP Server for Claude"
}
