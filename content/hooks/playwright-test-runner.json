{
  "slug": "playwright-test-runner",
  "description": "Automatically runs Playwright E2E tests when test files or page components are modified",
  "category": "hooks",
  "author": "JSONbored",
  "dateAdded": "2025-09-19",
  "tags": [
    "playwright",
    "e2e",
    "testing",
    "automation",
    "browser-testing"
  ],
  "hookType": "PostToolUse",
  "features": [
    "Automatic test execution on file changes",
    "Smart test detection for pages and components",
    "E2E regression testing",
    "Playwright integration",
    "Test result reporting",
    "Cross-browser testing support"
  ],
  "useCases": [
    "Run E2E tests when test files are modified",
    "Execute related tests when page components change",
    "Catch UI regressions early in development",
    "Automate browser testing workflows",
    "Validate page functionality after changes",
    "Test component interactions across browsers",
    "Ensure application quality before commits",
    "Monitor UI consistency during development"
  ],
  "configuration": {
    "hookConfig": {
      "hooks": {
        "postToolUse": {
          "script": "./.claude/hooks/playwright-test-runner.sh",
          "matchers": [
            "write",
            "edit"
          ]
        }
      }
    },
    "scriptContent": "#!/bin/bash\n\n# Read the tool input from stdin\nINPUT=$(cat)\nTOOL_NAME=$(echo \"$INPUT\" | jq -r '.tool_name')\nFILE_PATH=$(echo \"$INPUT\" | jq -r '.tool_input.file_path // .tool_input.path // \"\"')\n\nif [ -z \"$FILE_PATH\" ]; then\n  exit 0\nfi\n\necho \"üé≠ Playwright Test Runner - Analyzing file changes...\"\n\n# Check if this is a test file\nif [[ \"$FILE_PATH\" == *.spec.ts ]] || [[ \"$FILE_PATH\" == *.spec.js ]] || [[ \"$FILE_PATH\" == *e2e*.ts ]]; then\n    echo \"üìù Test file detected: $FILE_PATH\"\n    echo \"üé≠ Running specific Playwright test...\"\n    \n    if command -v npx >/dev/null 2>&1; then\n        npx playwright test \"$FILE_PATH\" --reporter=list\n        if [ $? -eq 0 ]; then\n            echo \"‚úÖ E2E tests passed for $FILE_PATH\"\n        else\n            echo \"‚ùå E2E tests failed for $FILE_PATH\"\n        fi\n    else\n        echo \"‚ö†Ô∏è Playwright not found. Install with: npm install -D @playwright/test\"\n    fi\n    \nelif [[ \"$FILE_PATH\" == *pages/*.tsx ]] || [[ \"$FILE_PATH\" == *app/*.tsx ]] || [[ \"$FILE_PATH\" == *components/*.tsx ]]; then\n    PAGE_NAME=$(basename \"${FILE_PATH%.*}\")\n    echo \"üß© Component/page detected: $PAGE_NAME\"\n    echo \"üé≠ Running related E2E tests...\"\n    \n    if command -v npx >/dev/null 2>&1; then\n        # Try to find and run tests related to this component\n        npx playwright test --grep \"$PAGE_NAME\" --reporter=list 2>/dev/null\n        if [ $? -eq 0 ]; then\n            echo \"‚úÖ Related E2E tests passed for $PAGE_NAME\"\n        else\n            echo \"‚ÑπÔ∏è No specific tests found for $PAGE_NAME or tests failed\"\n            # Run a basic smoke test if available\n            npx playwright test --grep \"smoke\" --reporter=list 2>/dev/null || echo \"‚ÑπÔ∏è No smoke tests available\"\n        fi\n    else\n        echo \"‚ö†Ô∏è Playwright not found. Install with: npm install -D @playwright/test\"\n    fi\nelse\n    echo \"‚ÑπÔ∏è File type not relevant for E2E testing: $FILE_PATH\"\nfi\n\necho \"\"\necho \"üí° Playwright Testing Tips:\"\necho \"  ‚Ä¢ Test files should end with .spec.ts, .spec.js, or contain 'e2e'\"\necho \"  ‚Ä¢ Use page-specific test names to enable smart test detection\"\necho \"  ‚Ä¢ Consider running full test suite before major releases\"\necho \"  ‚Ä¢ Check Playwright configuration for browser settings\"\n\necho \"\"\necho \"üéØ Test analysis complete!\"\n\nexit 0"
  },
  "documentationUrl": "https://playwright.dev",
  "source": "community"
}
