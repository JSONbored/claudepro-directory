{
  "slug": "api-endpoint-documentation-generator",
  "seoTitle": "API Doc Generator",
  "description": "Automatically generates or updates API documentation when endpoint files are modified",
  "category": "hooks",
  "author": "JSONbored",
  "dateAdded": "2025-09-19",
  "tags": ["api", "documentation", "openapi", "swagger", "automation"],
  "hookType": "PostToolUse",
  "features": [
    "Automatic OpenAPI/Swagger documentation generation",
    "Real-time documentation updates when API files change",
    "Support for JavaScript and Python API routes",
    "Extracts endpoint information and parameters",
    "Response type documentation extraction",
    "Multi-format output (JSON, Markdown)"
  ],
  "configuration": {
    "hookConfig": {
      "hooks": {
        "postToolUse": {
          "script": "./.claude/hooks/api-endpoint-documentation-generator.sh",
          "matchers": ["write", "edit"]
        }
      }
    },
    "scriptContent": "#!/usr/bin/env bash\n\n# Read the tool input from stdin\nINPUT=$(cat)\nTOOL_NAME=$(echo \"$INPUT\" | jq -r '.tool_name')\nFILE_PATH=$(echo \"$INPUT\" | jq -r '.tool_input.file_path // .tool_input.path // \"\"')\n\nif [ -z \"$FILE_PATH\" ]; then\n  exit 0\nfi\n\n# Check if it's an API-related file\nif [[ \"$FILE_PATH\" == *routes/* ]] || [[ \"$FILE_PATH\" == *controllers/* ]] || [[ \"$FILE_PATH\" == *api/* ]]; then\n  echo \"ðŸ“š Generating API documentation for $FILE_PATH...\"\n  \n  # Get file extension\n  EXT=\"${FILE_PATH##*.}\"\n  \n  case \"$EXT\" in\n    js|jsx|ts|tsx)\n      # JavaScript/TypeScript API files\n      if command -v swagger-jsdoc &> /dev/null && [ -f \"swaggerDef.js\" ]; then\n        echo \"Generating Swagger documentation...\"\n        npx swagger-jsdoc -d swaggerDef.js -o ./docs/api.json \"$FILE_PATH\" 2>/dev/null\n        echo \"âœ… Swagger documentation updated\" >&2\n      elif command -v npx &> /dev/null; then\n        echo \"Generating JSDoc documentation...\"\n        npx jsdoc \"$FILE_PATH\" -d ./docs/api/ 2>/dev/null\n        echo \"âœ… JSDoc documentation updated\" >&2\n      fi\n      ;;\n    py)\n      # Python API files\n      if command -v pydoc &> /dev/null; then\n        echo \"Generating Python API documentation...\"\n        python -m pydoc -w \"$FILE_PATH\" 2>/dev/null\n        echo \"âœ… Python documentation updated\" >&2\n      fi\n      ;;\n  esac\nelse\n  echo \"File not in API directory, skipping documentation generation\" >&2\nfi\n\nexit 0"
  },
  "useCases": [
    "Automatic API documentation in development workflows",
    "Keep OpenAPI specs synchronized with code changes",
    "Generate documentation for REST API endpoints",
    "Maintain up-to-date API reference docs",
    "Integration with Swagger UI for live documentation"
  ],
  "troubleshooting": [
    {
      "issue": "Hook triggers but file path pattern match fails",
      "solution": "Debug path detection: echo \"$FILE_PATH\" | grep -E 'routes|controllers|api'. Verify directory structure matches expected patterns. Add custom paths to case statement."
    },
    {
      "issue": "swagger-jsdoc command not found during execution",
      "solution": "Install dependencies: npm i -D swagger-jsdoc. Verify swaggerDef.js exists in project root. Check node_modules/.bin is in PATH. Use npx for local binaries."
    },
    {
      "issue": "Documentation generates but writes to wrong location",
      "solution": "Create docs/api directory: mkdir -p ./docs/api. Verify write permissions on output paths. Check current working directory in hook context: pwd >&2."
    },
    {
      "issue": "PostToolUse fires on all edits not just API files",
      "solution": "Enhance path filtering in script. Use stricter regex: [[ \"$FILE_PATH\" =~ (routes|api)/.*\\.(ts|js)$ ]]. Add early exit for non-matching paths."
    },
    {
      "issue": "Hook processes file but npx commands timeout silently",
      "solution": "Remove 2>/dev/null to see actual errors. Add timeout wrapper: timeout 30s npx command. Check for hanging processes: ps aux | grep jsdoc. Verify npm registry access."
    }
  ],
  "documentationUrl": "https://swagger.io/docs/",
  "source": "community"
}
