{
  "slug": "real-time-activity-tracker",
  "description": "Tracks all Claude Code activities in real-time and logs them for monitoring and debugging",
  "category": "hooks",
  "author": "JSONbored",
  "dateAdded": "2025-09-19",
  "tags": [
    "monitoring",
    "logging",
    "notification",
    "real-time",
    "debugging"
  ],
  "hookType": "Notification",
  "features": [
    "Real-time activity logging",
    "Structured activity records",
    "Daily log rotation",
    "Tool usage tracking",
    "File operation monitoring",
    "Debug information collection"
  ],
  "useCases": [
    "Monitor Claude Code tool usage in real-time",
    "Debug development workflow issues",
    "Track file modification patterns",
    "Audit development activities",
    "Analyze Claude's decision-making process",
    "Monitor project development progress",
    "Create activity reports for team review",
    "Troubleshoot hook execution problems"
  ],
  "configuration": {
    "hookConfig": {
      "hooks": {
        "notification": {
          "script": "./.claude/hooks/real-time-activity-tracker.sh",
          "matchers": [
            "*"
          ]
        }
      }
    },
    "scriptContent": "#!/bin/bash\n\n# Read the tool input from stdin\nINPUT=$(cat)\nTOOL_NAME=$(echo \"$INPUT\" | jq -r '.tool_name')\nFILE_PATH=$(echo \"$INPUT\" | jq -r '.tool_input.file_path // .tool_input.path // \"\"')\nTOOL_ACTION=$(echo \"$INPUT\" | jq -r '.tool_action // \"unknown\"')\n\necho \"ðŸ“Š Real-time Activity Tracker - Logging activity...\"\n\n# Create .claude directory if it doesn't exist\nmkdir -p .claude\n\n# Create daily activity log\nACTIVITY_LOG=\".claude/activity-$(date +%Y%m%d).log\"\nACTIVITY_JSON=\".claude/activity-$(date +%Y%m%d).json\"\n\n# Current timestamp\nTIMESTAMP=$(date --iso-8601=seconds 2>/dev/null || date -Iseconds 2>/dev/null || date)\n\n# Log in human-readable format\necho \"[$TIMESTAMP] Tool: $TOOL_NAME | File: $FILE_PATH | Action: $TOOL_ACTION\" >> \"$ACTIVITY_LOG\"\n\n# Log in JSON format for programmatic analysis\ncat >> \"$ACTIVITY_JSON\" << EOF\n{\n  \"timestamp\": \"$TIMESTAMP\",\n  \"tool_name\": \"$TOOL_NAME\",\n  \"file_path\": \"$FILE_PATH\",\n  \"action\": \"$TOOL_ACTION\",\n  \"session_id\": \"$(date +%Y%m%d_%H%M%S)_$$\"\n},\nEOF\n\n# Keep only last 100 entries in activity log to prevent it from growing too large\nif [ -f \"$ACTIVITY_LOG\" ]; then\n    tail -n 100 \"$ACTIVITY_LOG\" > \"$ACTIVITY_LOG.tmp\" && mv \"$ACTIVITY_LOG.tmp\" \"$ACTIVITY_LOG\"\nfi\n\n# Keep only last 100 entries in JSON log\nif [ -f \"$ACTIVITY_JSON\" ]; then\n    tail -n 100 \"$ACTIVITY_JSON\" > \"$ACTIVITY_JSON.tmp\" && mv \"$ACTIVITY_JSON.tmp\" \"$ACTIVITY_JSON\"\nfi\n\n# Activity statistics\nif [ -f \"$ACTIVITY_LOG\" ]; then\n    TOTAL_ACTIVITIES=$(wc -l < \"$ACTIVITY_LOG\")\n    echo \"ðŸ“ˆ Session Activity Count: $TOTAL_ACTIVITIES\"\n    \n    # Show recent activity summary\n    echo \"ðŸ•’ Recent Activities:\"\n    tail -n 3 \"$ACTIVITY_LOG\" | while read -r line; do\n        echo \"  â€¢ $line\"\n    done\n    \n    # File operation summary\n    WRITE_COUNT=$(grep -c \"Write\\|Edit\" \"$ACTIVITY_LOG\" 2>/dev/null || echo 0)\n    read_COUNT=$(grep -c \"Read\" \"$ACTIVITY_LOG\" 2>/dev/null || echo 0)\n    \n    echo \"ðŸ“Š Today's Summary:\"\n    echo \"  â€¢ Write/Edit operations: $WRITE_COUNT\"\n    echo \"  â€¢ Read operations: $READ_COUNT\"\nfi\n\n# Weekly activity archive (every Sunday)\nif [ \"$(date +%u)\" = \"7\" ]; then\n    ARCHIVE_DIR=\".claude/archive/$(date +%Y-%m)\"\n    mkdir -p \"$ARCHIVE_DIR\"\n    \n    # Move old logs to archive\n    find .claude -name \"activity-*.log\" -mtime +7 -exec mv {} \"$ARCHIVE_DIR/\" \\;\n    find .claude -name \"activity-*.json\" -mtime +7 -exec mv {} \"$ARCHIVE_DIR/\" \\;\n    \n    echo \"ðŸ“¦ Weekly archive created in $ARCHIVE_DIR\"\nfi\n\necho \"âœ… Activity logged to $ACTIVITY_LOG\"\n\nexit 0"
  },
  "source": "community"
}
