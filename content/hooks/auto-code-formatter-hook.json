{
  "slug": "auto-code-formatter-hook",
  "description": "Automatically formats code files after Claude writes or edits them using Prettier, Black, or other formatters",
  "category": "hooks",
  "author": "JSONbored",
  "dateAdded": "2025-09-19",
  "tags": [
    "formatting",
    "prettier",
    "black",
    "code-quality",
    "automation"
  ],
  "hookType": "PostToolUse",
  "features": [
    "Supports multiple formatters (Prettier, Black, gofmt, rustfmt)",
    "Language-specific formatting rules",
    "Runs automatically after file modifications",
    "Preserves file permissions and structure",
    "Silent operation with optional feedback",
    "Configurable timeout and error handling"
  ],
  "configuration": {
    "hookConfig": {
      "hooks": {
        "postToolUse": {
          "script": "./.claude/hooks/auto-code-formatter-hook.sh",
          "matchers": [
            "write",
            "edit",
            "multiedit"
          ]
        }
      }
    },
    "scriptContent": "#!/usr/bin/env bash\n\n# Read the tool input from stdin\nINPUT=$(cat)\nTOOL_NAME=$(echo \"$INPUT\" | jq -r '.tool_name')\nFILE_PATH=$(echo \"$INPUT\" | jq -r '.tool_input.file_path // .tool_input.path // \"\"')\n\nif [ -z \"$FILE_PATH\" ]; then\n  exit 0\nfi\n\n# Get file extension\nEXT=\"${FILE_PATH##*.}\"\n\n# Format based on file type\ncase \"$EXT\" in\n  js|jsx|ts|tsx|json|md|mdx|css|scss|html|vue|yaml|yml)\n    # JavaScript/TypeScript/Web files - use Prettier\n    if command -v prettier &> /dev/null; then\n      prettier --write \"$FILE_PATH\" 2>/dev/null\n      echo \"✅ Formatted $FILE_PATH with Prettier\" >&2\n    fi\n    ;;\n  \n  py)\n    # Python files - use Black\n    if command -v black &> /dev/null; then\n      black \"$FILE_PATH\" 2>/dev/null\n      echo \"✅ Formatted $FILE_PATH with Black\" >&2\n    elif command -v ruff &> /dev/null; then\n      ruff format \"$FILE_PATH\" 2>/dev/null\n      echo \"✅ Formatted $FILE_PATH with Ruff\" >&2\n    fi\n    ;;\n  \n  go)\n    # Go files - use gofmt\n    if command -v gofmt &> /dev/null; then\n      gofmt -w \"$FILE_PATH\" 2>/dev/null\n      echo \"✅ Formatted $FILE_PATH with gofmt\" >&2\n    fi\n    ;;\n  \n  rs)\n    # Rust files - use rustfmt\n    if command -v rustfmt &> /dev/null; then\n      rustfmt \"$FILE_PATH\" 2>/dev/null\n      echo \"✅ Formatted $FILE_PATH with rustfmt\" >&2\n    fi\n    ;;\nesac\n\nexit 0"
  },
  "useCases": [
    "Maintain consistent code style across team projects",
    "Automatically fix formatting issues after AI code generation",
    "Enforce project coding standards without manual intervention",
    "Support multiple programming languages in the same project",
    "Reduce code review friction by handling formatting automatically"
  ],
  "documentationUrl": "https://prettier.io/docs/en/",
  "source": "community"
}
