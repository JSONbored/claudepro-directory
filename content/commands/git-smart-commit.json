{
  "description": "Intelligently analyzes changes and creates well-formatted git commits with conventional commit messages",
  "category": "commands",
  "author": "JSONbored",
  "dateAdded": "2025-09-15",
  "tags": ["git", "commit", "version-control", "conventional-commits"],
  "content": "---\nallowed-tools: Bash(git add:*), Bash(git status:*), Bash(git diff:*), Bash(git commit:*)\nargument-hint: [type] [message]\ndescription: Create a smart git commit\nmodel: claude-3-5-sonnet-20241022\n---\n\n## Context\n\n- Current git status: !`git status --short`\n- Staged changes: !`git diff --cached --stat`\n- Unstaged changes: !`git diff --stat`\n- Recent commits: !`git log --oneline -5`\n\n## Your Task\n\nAnalyze the changes and create a git commit following these guidelines:\n\n1. **Conventional Commit Format**:\n   - feat: New feature\n   - fix: Bug fix\n   - docs: Documentation changes\n   - style: Code style changes (formatting, etc)\n   - refactor: Code refactoring\n   - perf: Performance improvements\n   - test: Test changes\n   - build: Build system changes\n   - ci: CI/CD changes\n   - chore: Other changes\n\n2. **Commit Message Structure**:\n   ```\n   <type>(<scope>): <subject>\n   \n   <body>\n   \n   <footer>\n   ```\n\n3. **Best Practices**:\n   - Subject line: 50 characters max\n   - Use imperative mood (\"Add\" not \"Added\")\n   - Body: Wrap at 72 characters\n   - Explain what and why, not how\n   - Reference issues if applicable\n\n4. **Smart Analysis**:\n   - Group related changes\n   - Suggest splitting if changes are unrelated\n   - Detect breaking changes\n   - Identify files that shouldn't be committed\n\nIf arguments provided: Use $1 as type and $2 as message.\nOtherwise: Analyze changes and suggest appropriate commit.\n\n## Steps\n\n1. Review all changes\n2. Identify the commit type\n3. Stage appropriate files\n4. Create descriptive commit message\n5. Commit the changes",
  "configuration": {
    "temperature": 0.3,
    "maxTokens": 2000
  },
  "githubUrl": "https://github.com/conventional-commits/conventionalcommits.org",
  "documentationUrl": "https://www.conventionalcommits.org/",
  "source": "community",
  "slug": "git-smart-commit"
}
