{
  "description": "Generate production-ready React components from natural language using V0.dev patterns with shadcn/ui, TailwindCSS, and TypeScript",
  "category": "commands",
  "author": "JSONbored",
  "dateAdded": "2025-10-16",
  "tags": ["v0", "ui-generation", "shadcn", "react", "tailwind"],
  "content": "The `/v0-generate` command generates production-ready React components using V0.dev AI patterns with shadcn/ui integration, TailwindCSS v4, and full TypeScript support.\n\n## Usage\n\n```\n/v0-generate [options] <component_description>\n```\n\n## Options\n\n### Component Types\n- `--page` - Generate full page layout (default)\n- `--component` - Generate reusable component\n- `--form` - Generate form with validation\n- `--dashboard` - Generate dashboard layout\n- `--landing` - Generate landing page section\n\n### Framework Integration\n- `--next15` - Next.js 15 App Router (default)\n- `--react19` - Standalone React 19\n- `--remix` - Remix framework\n- `--astro` - Astro with React islands\n\n### UI Libraries\n- `--shadcn` - Use shadcn/ui components (default)\n- `--radix` - Raw Radix UI primitives\n- `--headless` - Headless UI components\n- `--custom` - Custom styled components\n\n### Styling Options\n- `--tailwind` - TailwindCSS v4 (default)\n- `--css-modules` - CSS Modules\n- `--styled` - Styled Components\n- `--vanilla` - Vanilla Extract\n\n### Features\n- `--responsive` - Mobile-first responsive design (default: true)\n- `--dark-mode` - Include dark mode support\n- `--animated` - Add framer-motion animations\n- `--accessible` - WCAG 2.2 Level AA compliance\n- `--server-component` - React Server Component\n- `--client-component` - Client Component with interactivity\n\n## Examples\n\n### Dashboard Page Generation\n\n**Command:**\n```\n/v0-generate --page --dashboard --dark-mode \"Analytics dashboard with revenue chart, user stats cards, and recent activity table\"\n```\n\n**Generated Code:**\n```typescript\n// app/dashboard/page.tsx\nimport { Suspense } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { RevenueChart } from '@/components/dashboard/revenue-chart';\nimport { StatsCards } from '@/components/dashboard/stats-cards';\nimport { ActivityTable } from '@/components/dashboard/activity-table';\nimport { DollarSign, Users, ShoppingCart, TrendingUp } from 'lucide-react';\n\nexport default async function DashboardPage() {\n  return (\n    <div className=\"flex min-h-screen flex-col\">\n      <header className=\"border-b\">\n        <div className=\"container flex h-16 items-center px-4\">\n          <h1 className=\"text-2xl font-bold\">Analytics Dashboard</h1>\n        </div>\n      </header>\n\n      <main className=\"flex-1 space-y-4 p-4 md:p-8\">\n        {/* Stats Cards */}\n        <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">\n                Total Revenue\n              </CardTitle>\n              <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold\">$45,231.89</div>\n              <p className=\"text-xs text-muted-foreground\">\n                +20.1% from last month\n              </p>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">\n                Active Users\n              </CardTitle>\n              <Users className=\"h-4 w-4 text-muted-foreground\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold\">+2,350</div>\n              <p className=\"text-xs text-muted-foreground\">\n                +180.1% from last month\n              </p>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">Sales</CardTitle>\n              <ShoppingCart className=\"h-4 w-4 text-muted-foreground\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold\">+12,234</div>\n              <p className=\"text-xs text-muted-foreground\">\n                +19% from last month\n              </p>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">\n                Conversion Rate\n              </CardTitle>\n              <TrendingUp className=\"h-4 w-4 text-muted-foreground\" />\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold\">+3.24%</div>\n              <p className=\"text-xs text-muted-foreground\">\n                +0.5% from last month\n              </p>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Revenue Chart */}\n        <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-7\">\n          <Card className=\"col-span-4\">\n            <CardHeader>\n              <CardTitle>Revenue Overview</CardTitle>\n            </CardHeader>\n            <CardContent className=\"pl-2\">\n              <Suspense fallback={<div>Loading chart...</div>}>\n                <RevenueChart />\n              </Suspense>\n            </CardContent>\n          </Card>\n\n          <Card className=\"col-span-3\">\n            <CardHeader>\n              <CardTitle>Recent Activity</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <Suspense fallback={<div>Loading activity...</div>}>\n                <ActivityTable />\n              </Suspense>\n            </CardContent>\n          </Card>\n        </div>\n      </main>\n    </div>\n  );\n}\n```\n\n**Generated Revenue Chart Component:**\n```typescript\n// components/dashboard/revenue-chart.tsx\n'use client';\n\nimport { Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\n\nconst data = [\n  { month: 'Jan', revenue: 4000 },\n  { month: 'Feb', revenue: 3000 },\n  { month: 'Mar', revenue: 5000 },\n  { month: 'Apr', revenue: 4500 },\n  { month: 'May', revenue: 6000 },\n  { month: 'Jun', revenue: 5500 },\n];\n\nexport function RevenueChart() {\n  return (\n    <ResponsiveContainer width=\"100%\" height={350}>\n      <LineChart data={data}>\n        <XAxis\n          dataKey=\"month\"\n          stroke=\"#888888\"\n          fontSize={12}\n          tickLine={false}\n          axisLine={false}\n        />\n        <YAxis\n          stroke=\"#888888\"\n          fontSize={12}\n          tickLine={false}\n          axisLine={false}\n          tickFormatter={(value) => `$${value}`}\n        />\n        <Tooltip />\n        <Line\n          type=\"monotone\"\n          dataKey=\"revenue\"\n          stroke=\"hsl(var(--primary))\"\n          strokeWidth={2}\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n}\n```\n\n### Form Component Generation\n\n**Command:**\n```\n/v0-generate --form --accessible \"User registration form with email, password, and terms acceptance\"\n```\n\n**Generated Code:**\n```typescript\n// components/forms/registration-form.tsx\n'use client';\n\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { Button } from '@/components/ui/button';\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Loader2 } from 'lucide-react';\n\nconst formSchema = z.object({\n  email: z\n    .string()\n    .email({ message: 'Please enter a valid email address' })\n    .min(1, { message: 'Email is required' }),\n  password: z\n    .string()\n    .min(8, { message: 'Password must be at least 8 characters' })\n    .regex(/[A-Z]/, { message: 'Password must contain at least one uppercase letter' })\n    .regex(/[a-z]/, { message: 'Password must contain at least one lowercase letter' })\n    .regex(/[0-9]/, { message: 'Password must contain at least one number' }),\n  confirmPassword: z.string(),\n  acceptTerms: z.boolean().refine((val) => val === true, {\n    message: 'You must accept the terms and conditions',\n  }),\n}).refine((data) => data.password === data.confirmPassword, {\n  message: \"Passwords don't match\",\n  path: ['confirmPassword'],\n});\n\ntype FormValues = z.infer<typeof formSchema>;\n\ninterface RegistrationFormProps {\n  onSubmit: (data: FormValues) => Promise<void>;\n}\n\nexport function RegistrationForm({ onSubmit }: RegistrationFormProps) {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const form = useForm<FormValues>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      acceptTerms: false,\n    },\n  });\n\n  const handleSubmit = async (data: FormValues) => {\n    setIsSubmitting(true);\n    try {\n      await onSubmit(data);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(handleSubmit)} className=\"space-y-6\">\n        <FormField\n          control={form.control}\n          name=\"email\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Email</FormLabel>\n              <FormControl>\n                <Input\n                  type=\"email\"\n                  placeholder=\"you@example.com\"\n                  autoComplete=\"email\"\n                  {...field}\n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"password\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Password</FormLabel>\n              <FormControl>\n                <Input\n                  type=\"password\"\n                  placeholder=\"••••••••\"\n                  autoComplete=\"new-password\"\n                  {...field}\n                />\n              </FormControl>\n              <FormDescription>\n                Must be at least 8 characters with uppercase, lowercase, and number\n              </FormDescription>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"confirmPassword\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Confirm Password</FormLabel>\n              <FormControl>\n                <Input\n                  type=\"password\"\n                  placeholder=\"••••••••\"\n                  autoComplete=\"new-password\"\n                  {...field}\n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"acceptTerms\"\n          render={({ field }) => (\n            <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\n              <FormControl>\n                <Checkbox\n                  checked={field.value}\n                  onCheckedChange={field.onChange}\n                />\n              </FormControl>\n              <div className=\"space-y-1 leading-none\">\n                <FormLabel>\n                  I accept the{' '}\n                  <a href=\"/terms\" className=\"underline hover:text-primary\">\n                    terms and conditions\n                  </a>\n                </FormLabel>\n                <FormMessage />\n              </div>\n            </FormItem>\n          )}\n        />\n\n        <Button type=\"submit\" className=\"w-full\" disabled={isSubmitting}>\n          {isSubmitting && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n          Create Account\n        </Button>\n      </form>\n    </Form>\n  );\n}\n```\n\n### Landing Page Section\n\n**Command:**\n```\n/v0-generate --landing --animated \"Hero section with gradient background, CTA buttons, and feature highlights\"\n```\n\n**Generated Code:**\n```typescript\n// components/landing/hero-section.tsx\n'use client';\n\nimport { motion } from 'framer-motion';\nimport { Button } from '@/components/ui/button';\nimport { ArrowRight, Zap, Shield, Rocket } from 'lucide-react';\n\nconst containerVariants = {\n  hidden: { opacity: 0 },\n  visible: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.2,\n    },\n  },\n};\n\nconst itemVariants = {\n  hidden: { opacity: 0, y: 20 },\n  visible: {\n    opacity: 1,\n    y: 0,\n    transition: { duration: 0.5 },\n  },\n};\n\nexport function HeroSection() {\n  return (\n    <section className=\"relative overflow-hidden bg-gradient-to-b from-primary/5 via-background to-background\">\n      <div className=\"container relative z-10 px-4 py-24 md:py-32\">\n        <motion.div\n          variants={containerVariants}\n          initial=\"hidden\"\n          animate=\"visible\"\n          className=\"mx-auto max-w-4xl text-center\"\n        >\n          <motion.div variants={itemVariants}>\n            <h1 className=\"text-4xl font-bold tracking-tight sm:text-6xl\">\n              Build Modern Apps{' '}\n              <span className=\"bg-gradient-to-r from-primary to-primary/60 bg-clip-text text-transparent\">\n                10x Faster\n              </span>\n            </h1>\n          </motion.div>\n\n          <motion.p\n            variants={itemVariants}\n            className=\"mt-6 text-lg text-muted-foreground sm:text-xl\"\n          >\n            Ship production-ready applications with the power of Next.js 15,\n            React 19, and cutting-edge AI tools. Start building today.\n          </motion.p>\n\n          <motion.div\n            variants={itemVariants}\n            className=\"mt-10 flex flex-col gap-4 sm:flex-row sm:justify-center\"\n          >\n            <Button size=\"lg\" className=\"group\">\n              Get Started Free\n              <ArrowRight className=\"ml-2 h-4 w-4 transition-transform group-hover:translate-x-1\" />\n            </Button>\n            <Button size=\"lg\" variant=\"outline\">\n              View Demo\n            </Button>\n          </motion.div>\n\n          <motion.div\n            variants={containerVariants}\n            className=\"mt-20 grid gap-8 sm:grid-cols-3\"\n          >\n            <motion.div variants={itemVariants} className=\"flex flex-col items-center\">\n              <div className=\"flex h-12 w-12 items-center justify-center rounded-lg bg-primary/10\">\n                <Zap className=\"h-6 w-6 text-primary\" />\n              </div>\n              <h3 className=\"mt-4 text-lg font-semibold\">Lightning Fast</h3>\n              <p className=\"mt-2 text-sm text-muted-foreground\">\n                Optimized performance with sub-second load times\n              </p>\n            </motion.div>\n\n            <motion.div variants={itemVariants} className=\"flex flex-col items-center\">\n              <div className=\"flex h-12 w-12 items-center justify-center rounded-lg bg-primary/10\">\n                <Shield className=\"h-6 w-6 text-primary\" />\n              </div>\n              <h3 className=\"mt-4 text-lg font-semibold\">Secure by Default</h3>\n              <p className=\"mt-2 text-sm text-muted-foreground\">\n                Built-in security best practices and compliance\n              </p>\n            </motion.div>\n\n            <motion.div variants={itemVariants} className=\"flex flex-col items-center\">\n              <div className=\"flex h-12 w-12 items-center justify-center rounded-lg bg-primary/10\">\n                <Rocket className=\"h-6 w-6 text-primary\" />\n              </div>\n              <h3 className=\"mt-4 text-lg font-semibold\">Deploy Instantly</h3>\n              <p className=\"mt-2 text-sm text-muted-foreground\">\n                One-click deployment to global edge network\n              </p>\n            </motion.div>\n          </motion.div>\n        </motion.div>\n      </div>\n\n      {/* Background gradient orbs */}\n      <div className=\"absolute inset-0 -z-10 overflow-hidden\">\n        <div className=\"absolute -top-40 -right-40 h-80 w-80 rounded-full bg-primary/20 blur-3xl\" />\n        <div className=\"absolute -bottom-40 -left-40 h-80 w-80 rounded-full bg-primary/20 blur-3xl\" />\n      </div>\n    </section>\n  );\n}\n```\n\n## Configuration\n\n### shadcn/ui Setup\n```json\n// components.json\n{\n  \"$schema\": \"https://ui.shadcn.com/schema.json\",\n  \"style\": \"new-york\",\n  \"rsc\": true,\n  \"tsx\": true,\n  \"tailwind\": {\n    \"config\": \"tailwind.config.ts\",\n    \"css\": \"app/globals.css\",\n    \"baseColor\": \"slate\",\n    \"cssVariables\": true\n  },\n  \"aliases\": {\n    \"components\": \"@/components\",\n    \"utils\": \"@/lib/utils\"\n  }\n}\n```\n\n### Dark Mode Support\n```typescript\n// Generated theme provider\n'use client';\n\nimport { ThemeProvider as NextThemesProvider } from 'next-themes';\nimport { type ThemeProviderProps } from 'next-themes/dist/types';\n\nexport function ThemeProvider({ children, ...props }: ThemeProviderProps) {\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>;\n}\n```\n\n## Best Practices\n\n1. **Component Structure**: All generated components follow React 19 best practices with proper TypeScript types\n2. **Accessibility**: WCAG 2.2 Level AA compliant with proper ARIA labels and keyboard navigation\n3. **Responsive Design**: Mobile-first approach with Tailwind breakpoints\n4. **Performance**: Server Components by default, Client Components only when needed\n5. **Type Safety**: Full TypeScript support with Zod validation for forms\n6. **Styling**: TailwindCSS v4 with CSS variables for theming\n7. **Animation**: Framer Motion for smooth, performant animations\n8. **SEO**: Proper semantic HTML with metadata generation",
  "configuration": {
    "temperature": 0.4,
    "maxTokens": 8000,
    "systemPrompt": "You are a V0.dev component generation expert focused on creating production-ready React components with shadcn/ui and modern best practices"
  },
  "githubUrl": "https://github.com/vercel/v0",
  "documentationUrl": "https://v0.dev/docs",
  "troubleshooting": [
    {
      "issue": "shadcn/ui installation fails with React 19 peer dependency conflict",
      "solution": "Use npm install --legacy-peer-deps or pnpm add with --force flag. Update to shadcn/ui canary for React 19 support. Override react-is dependency."
    },
    {
      "issue": "Generated components show TypeScript errors with Next.js 15 types",
      "solution": "Update @types/react and @types/react-dom to latest. Set typescript: strict: false temporarily. Verify Next.js 15.5+ with React 19.1 compatibility."
    },
    {
      "issue": "@radix-ui packages throwing version mismatch during component generation",
      "solution": "Install Radix packages with: npm --legacy-peer-deps i @radix-ui/react-dialog. Update all @radix-ui/* to latest versions. Check compatibility table."
    },
    {
      "issue": "Form or Command components incompatible with React 19 and Next 15",
      "solution": "Use npx --legacy-peer-deps v0 add [component-id] for installation. Update react-hook-form to v7.54+. Verify Zod schema compatibility with latest."
    },
    {
      "issue": "Generated component missing proper 'use client' directives or RSC errors",
      "solution": "Add 'use client' to interactive components manually. Verify hooks usage requires client directive. Check Server Component vs Client Component architecture."
    },
    {
      "issue": "v0.dev component installation requires --legacy-peer-deps every time",
      "solution": "Switch to pnpm or yarn for better peer dependency handling. Use pnpm add or yarn add without extra flags. Update package.json engines field for React 19."
    },
    {
      "issue": "TailwindCSS v4 classes not applying to generated shadcn components",
      "solution": "Verify tailwind.config.ts includes component paths in content array. Run npx tailwindcss init to regenerate config. Check @import rules in globals.css."
    },
    {
      "issue": "Framer Motion animations causing hydration errors in Next.js 15",
      "solution": "Wrap animated components with 'use client' directive at file top. Use LazyMotion for reduced bundle size. Check MotionConfig compatibility with React 19."
    },
    {
      "issue": "Generated forms not validating with Zod schemas or react-hook-form",
      "solution": "Update @hookform/resolvers to latest for Zod v3 support. Verify zodResolver import from @hookform/resolvers/zod. Check schema.parse vs schema.safeParse usage."
    }
  ],
  "source": "community",
  "slug": "v0-generate",
  "seoTitle": "V0 Component Generator for Claude"
}
