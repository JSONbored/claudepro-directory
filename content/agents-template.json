{
  "// REQUIRED FIELDS": "All agents must include these fields",
  "slug": "your-agent-name-agent",
  "// NOTE": "Title is auto-generated from slug with smart acronym capitalization (e.g., 'api-builder-agent' â†’ 'API Builder Agent')",
  "description": "Brief description of what this agent specializes in and its expertise areas",
  "category": "agents",
  "author": "Your Name or GitHub Username",
  "dateAdded": "YYYY-MM-DD",
  "tags": [
    "primary-expertise",
    "secondary-skill", 
    "technology-stack",
    "use-case"
  ],
  "content": "You are an expert [ROLE] with deep knowledge of [DOMAIN]. Your expertise includes [KEY_AREAS].\n\n## Core Expertise\n\n### 1. [Primary Skill Area]\n- Key capability 1\n- Key capability 2\n- Key capability 3\n\n### 2. [Secondary Skill Area]\n- Advanced technique 1\n- Advanced technique 2\n- Advanced technique 3\n\n## Code Examples\n\n```[language]\n// Example code demonstrating expertise\nfunction example() {\n  // Your implementation here\n}\n```\n\n## Best Practices\n\n1. **Practice 1**: Description and reasoning\n2. **Practice 2**: Description and reasoning\n3. **Practice 3**: Description and reasoning\n\nAlways focus on [CORE_PRINCIPLES] while maintaining [QUALITY_STANDARDS].",
  "configuration": {
    "temperature": 0.3,
    "maxTokens": 8000,
    "systemPrompt": "You are an expert [ROLE] with deep knowledge of [DOMAIN]. Always prioritize [KEY_VALUES]."
  },
  "source": "community",

  "// OPTIONAL FIELDS": "These will be auto-generated if not provided",
  "features": [
    "Key capability or expertise area 1",
    "Key capability or expertise area 2", 
    "Key capability or expertise area 3",
    "Specialized skill or knowledge area 4"
  ],
  "useCases": [
    "Common scenario where this agent excels 1",
    "Common scenario where this agent excels 2",
    "Common scenario where this agent excels 3"
  ],
  "documentationUrl": "https://link-to-relevant-external-documentation.com",
  "installation": {
    "claudeCode": {
      "steps": [
        "Create agent directory: mkdir -p .claude/agents (project-level) or ~/.claude/agents (user-level)",
        "Create agent file: your-agent-name-agent.md in the agents directory",
        "Use YAML frontmatter format with name, description, and optional tools",
        "Add your agent's system prompt as markdown content below the frontmatter",
        "Use /agents command in Claude Code to manage your subagents"
      ],
      "configFormat": "Markdown file with YAML frontmatter",
      "configPath": {
        "project": ".claude/agents/your-agent-name-agent.md",
        "user": "~/.claude/agents/your-agent-name-agent.md"
      }
    },
    "claudeDesktop": {
      "steps": [
        "Claude Desktop does not have direct agent support",
        "To use Claude Code agents with Claude Desktop, configure Claude Code as an MCP server",
        "Add this to your claude_desktop_config.json file:",
        "{\"mcpServers\": {\"claude-code\": {\"command\": \"claude\", \"args\": [\"mcp\", \"serve\"], \"env\": {}}}}",
        "This allows Claude Desktop to access Claude Code's agent capabilities via MCP"
      ],
      "configPath": {
        "macOS": "~/Library/Application Support/Claude/claude_desktop_config.json",
        "windows": "%APPDATA%\\Claude\\claude_desktop_config.json",
        "linux": "~/.config/claude/claude_desktop_config.json"
      },
      "note": "Primary agent functionality is in Claude Code. Claude Desktop can only access agents indirectly via MCP."
    },
    "sdk": {
      "steps": [
        "Install Claude Code SDK: npm install @anthropic-ai/claude-code",
        "Import ClaudeSDKClient and ClaudeCodeOptions",
        "Configure options with system_prompt, max_turns, allowed_tools",
        "Use client.query() to interact with your custom agent"
      ]
    },
    "requirements": [
      "Claude Code CLI installed",
      "Basic understanding of YAML frontmatter and Markdown",
      "Node.js 18+ if using SDK integration"
    ]
  },

  "// AUTO-GENERATED SECTIONS": "These are automatically generated if optional fields are missing",
  "// title": "Auto-generated from slug with smart acronym capitalization (API, UI, ML, AI, etc.)",
  "// installation": "Generated from slug + agent type + standard Claude paths",
  "// requirements": "Auto-detected from content and configuration + 'Claude Desktop or Claude Code'",
  "// useCases": "Generated from tags + expertise analysis + fallback generic use cases",
  "// features": "Could be auto-generated from content analysis and configuration parameters"
}