{
  "slug": "api-development-starter-kit",
  "title": "API Development Starter Kit",
  "seoTitle": "API Development Kit",
  "description": "Complete toolkit for building and documenting RESTful APIs with automated testing and documentation generation. Perfect for backend developers starting new API projects.",
  "author": "JSONbored",
  "dateAdded": "2025-10-02",
  "tags": ["api", "backend", "rest", "development", "documentation", "testing"],
  "source": "community",
  "category": "collections",
  "collectionType": "starter-kit",
  "difficulty": "beginner",
  "estimatedSetupTime": "20 minutes",
  "features": [
    "Complete API development workflow",
    "Automated documentation generation",
    "Built-in testing and debugging tools",
    "REST API design best practices"
  ],
  "useCases": [
    "Building new REST APIs from scratch",
    "Standardizing API development across teams",
    "Learning API development best practices",
    "Rapid prototyping of API endpoints"
  ],
  "items": [
    {
      "category": "agents",
      "slug": "api-builder-agent",
      "reason": "Helps design and build RESTful API endpoints following best practices"
    },
    {
      "category": "commands",
      "slug": "docs",
      "reason": "Generates comprehensive API documentation automatically"
    },
    {
      "category": "commands",
      "slug": "generate-tests",
      "reason": "Creates unit and integration tests for API endpoints"
    },
    {
      "category": "commands",
      "slug": "debug",
      "reason": "Helps debug API issues and trace request/response flows"
    }
  ],
  "installationOrder": ["api-builder-agent", "docs", "generate-tests", "debug"],
  "prerequisites": [
    "Node.js 18 or higher",
    "Basic understanding of REST API concepts",
    "Code editor with Claude integration"
  ],
  "compatibility": {
    "claudeDesktop": true,
    "claudeCode": true
  },
  "troubleshooting": [
    {
      "issue": "API Builder agent conflicts with existing test framework",
      "solution": "Install items in the specified order: api-builder-agent first, then docs, generate-tests, debug. Run npm ls to verify no peer dependency conflicts between generated code and test framework."
    },
    {
      "issue": "Documentation generation fails after installing debug command",
      "solution": "Ensure all items share compatible Node.js versions. Check package.json engines field across agent and commands. Reinstall docs command after verifying Node 18+ is active."
    },
    {
      "issue": "Missing test dependencies when using generate-tests command",
      "solution": "Install testing framework before collection setup. Run npm install jest @types/jest or your preferred test runner. Then reinstall generate-tests command to detect framework."
    },
    {
      "issue": "Installation order not followed causing endpoint conflicts",
      "solution": "Uninstall all collection items using Claude Code settings. Reinstall strictly following installationOrder array: api-builder-agent, docs, generate-tests, debug. Restart Claude after each."
    },
    {
      "issue": "Debug command cannot trace requests from API Builder agent",
      "solution": "Enable request logging in API Builder agent settings first. Install debug command last to allow proper hook integration. Verify both items are enabled in Claude Code preferences."
    }
  ],
  "source": "community"
}
