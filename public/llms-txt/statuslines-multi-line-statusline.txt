# undefined - Claude Pro Directory

> Comprehensive multi-line statusline displaying detailed session information across two lines with organized sections and visual separators

URL: https://claudepro.directory/statuslines/multi-line-statusline
Category: Statuslines
Author: JSONbored
Tags: multi-line, comprehensive, detailed, bash, powerline, dashboard
Added: 2025-10-01

---

#!/usr/bin/env bash

# Multi-Line Statusline for Claude Code
# Displays comprehensive session info across two lines

# Read JSON from stdin
read -r input

# Extract all available data
model=$(echo "$input" | jq -r '.model // "unknown"')
dir=$(echo "$input" | jq -r '.workspace.path // "~"' | sed "s|$HOME|~|")
tokens=$(echo "$input" | jq -r '.session.totalTokens // 0')
cost=$(echo "$input" | jq -r '.session.estimatedCost // 0' | awk '{printf "%.3f", $0}')
memory=$(echo "$input" | jq -r '.system.memoryUsage // 0' | awk '{printf "%.1f", $0/1024/1024}')

# Get git info if in repo
workdir=$(echo "$input" | jq -r '.workspace.path // "."')
cd "$workdir" 2>/dev/null || cd .

if git rev-parse --git-dir > /dev/null 2>&1; then
  branch=$(git symbolic-ref --short HEAD 2>/dev/null || echo "(detached)")
  if [ -z "$(git status --porcelain)" ]; then
    git_status="\033[32m ✓\033[0m"
  else
    git_status="\033[33m ✗\033[0m"
  fi
  git_display=" ${branch}${git_status}"
else
  git_display=""
fi

# Box drawing and separators
SEP="\ue0b0"
VSEP="│"
TOP_LEFT="┌"
BOT_LEFT="└"

# Color scheme
RESET="\033[0m"
MODEL_C="\033[38;5;111m"  # Blue
DIR_C="\033[38;5;214m"    # Orange
TOKEN_C="\033[38;5;76m"   # Green
COST_C="\033[38;5;220m"   # Yellow
MEM_C="\033[38;5;139m"    # Purple

# Build top line: Model | Directory | Git
top_line="${TOP_LEFT}${RESET} ${MODEL_C}${model}${RESET} ${VSEP} ${DIR_C}${dir}${RESET}${git_display}"

# Build bottom line: Tokens | Cost | Memory
bottom_line="${BOT_LEFT}${RESET} ${TOKEN_C} ${tokens:,} tokens${RESET} ${VSEP} ${COST_C}\$${cost}${RESET}"

if [ "$memory" != "0.0" ]; then
  bottom_line="${bottom_line} ${VSEP} ${MEM_C}${memory} MB${RESET}"
fi

# Output both lines
echo -e "$top_line"
echo -e "$bottom_line"


---

Last updated: 2025-10-20T19:41:24.283Z
